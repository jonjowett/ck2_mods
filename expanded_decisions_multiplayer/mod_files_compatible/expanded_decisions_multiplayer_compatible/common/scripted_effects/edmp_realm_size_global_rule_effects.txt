edmp_realm_size_change_to_limited_for_players = {
	custom_tooltip = {
		text = edmp_realm_size_change_to_limited_for_players_tt
		clr_global_flag = edmp_realm_size_limited
		set_global_flag = edmp_realm_size_limited
	}
	if = {
		limit = { NOT = { has_global_flag = edmp_realm_size_has_previously_been_initialised_in_this_game } }
		custom_tooltip = {
			text = edmp_realm_size_inform_user_of_parameter_initialisation_tt
			set_global_flag = edmp_realm_size_has_previously_been_initialised_in_this_game
		}
		edmp_realm_size_change_parameters_to_default = yes
	}
	else = {
		custom_tooltip = { text = edmp_realm_size_limit_set_to_previous_value_tt }
		edmp_realm_size_check_parameters_and_reset_invalid_to_default = yes
	}
	edmp_realm_size_calculate_for_all_relevant_characters = yes
	if = {
		limit = { edmp_this_is_a_multiplayer_game = yes }
		custom_tooltip = {
			text = edmp_gmn_player_notification_sent_tt
			any_player = {
				limit = { NOT = { character = PREV } }
				character_event = { id = edmp_gmn.2200 }
			}
		}
	}
}

edmp_realm_size_change_parameters_to_default = {
	edmp_realm_size_change_parameters_to_default_limit = yes
	edmp_realm_size_change_parameters_to_default_empty_holdings_tribal = yes
	edmp_realm_size_change_parameters_to_default_empty_holdings_nomadic = yes
	edmp_realm_size_change_parameters_to_default_excess_close_threshold_frac = yes
}

edmp_realm_size_change_parameters_to_default_limit = {
	custom_tooltip = {
		text = edmp_realm_size_limit_set_to_default_50_tt
		set_variable = { which = global_edmp_realm_size_limit                          value = 50    }
	}
}

edmp_realm_size_change_parameters_to_default_empty_holdings_tribal = {
	custom_tooltip = {
		text = edmp_realm_size_tribal_empty_holding_contribution_set_to_default_half_tt
		set_variable = { which = global_edmp_realm_size_empty_holdings_tribal          value =  0.5  }
	}
}

edmp_realm_size_change_parameters_to_default_empty_holdings_nomadic = {
	custom_tooltip = {
		text = edmp_realm_size_nomadic_empty_holding_contribution_set_to_default_quarter_tt
		set_variable = { which = global_edmp_realm_size_empty_holdings_nomadic         value =  0.25 }
	}
}

edmp_realm_size_change_parameters_to_default_excess_close_threshold_frac = {
	custom_tooltip = {
		text = edmp_realm_size_excess_close_threshold_frac_set_to_default_fifth_tt
		set_variable = { which = global_edmp_realm_size_excess_close_threshold_frac    value =  0.2  }
	}
}

edmp_realm_size_check_parameters_and_reset_invalid_to_default = {
	# If the current global parameters are set to invalid values, reset them to the default
	#  --- 0 <= Realm size limit
	#  --- 0 <= Empty holding contributions <= 1
	#  --- 0 < Excess "close" threshold (as fraction of limit) <= 1
	if = {
		limit = { NOT = { check_variable = { which = global_edmp_realm_size_limit value >= 0 } } }
		edmp_realm_size_change_parameters_to_default_limit = yes
	}
	if = {
		limit = {
			NAND = {
				check_variable = { which = global_edmp_realm_size_empty_holdings_tribal value >= 0 }
				check_variable = { which = global_edmp_realm_size_empty_holdings_tribal value <= 1 }
			}
		}
		edmp_realm_size_change_parameters_to_default_empty_holdings_tribal = yes
	}
	if = {
		limit = {
			NAND = {
				check_variable = { which = global_edmp_realm_size_empty_holdings_nomadic value >= 0 }
				check_variable = { which = global_edmp_realm_size_empty_holdings_nomadic value <= 1 }
			}
		}
		edmp_realm_size_change_parameters_to_default_empty_holdings_nomadic = yes
	}
	if = {
		limit = {
			NAND = {
				check_variable = { which = global_edmp_realm_size_excess_close_threshold_frac value >  0 }
				check_variable = { which = global_edmp_realm_size_excess_close_threshold_frac value <= 1 }
			}
		}
		edmp_realm_size_change_parameters_to_default_excess_close_threshold_frac = yes
	}
}

edmp_realm_size_change_to_not_limited_for_players = {
	custom_tooltip = {
		text = edmp_realm_size_change_to_not_limited_for_players_tt
		clr_global_flag = edmp_realm_size_limited
	}
	edmp_realm_size_calculate_for_all_relevant_characters = yes
	if = {
		limit = { edmp_this_is_a_multiplayer_game = yes }
		custom_tooltip = {
			text = edmp_gmn_player_notification_sent_tt
			any_player = {
				limit = { NOT = { character = PREV } }
				character_event = { id = edmp_gmn.3000 }
			}
		}
	}
}
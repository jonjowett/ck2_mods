####TRAIT GROUP TRIGGERS####
#If you make changes, update the "Trait group triggers CK2" spreadsheet

#Agreeable
#has_benevolent_trait_trigger		Has a benevolent trait.
#is_benevolent_trigger				Has a benevolent trait and not any evil traits.
#has_pleasant_trait_trigger			Has a pleasant personality trait. 
#has_pleasant_personality_trigger	Has a pleasant personality trait and not any unpleasant personality traits.
#has_pious_trait_trigger			Has a piety trait.
#is_pious_trigger					Has a piety trait and not any impious traits.
#has_virtue_trigger					Has a virtue trait.

#Disagreeable
#has_evil_trait_trigger				Has an evil trait.
#is_evil_trigger					Has an evil trait and not any benevolent traits.
#has_unpleasant_trait_trigger		Has an unpleasant personality trait. 
#has_unpleasant_personality_trigger	Has an  unpleasant personality trait and not any pleasant personality traits.
#has_impious_trait_trigger			Has an impious trait.
#is_impious_trigger					Has a impious trait and not any piety traits.
#has_vice_trigger					Has a vice trait.

#Attractiveness
#has_attractive_trait_trigger		Has a sex appeal trait.
#is_attractive_trigger				Has a sex appeal trait and not any traits with negative sex appeal.
#has_unattractive_trait_trigger		Has a negative sex appeal trait.
#is_unattractive_trigger			Has a negative sex appeal trait and not any traits with sex appeal.
#has_fair_trait_trigger				Is Fair/Groomed.
#has_ugly_trait_trigger				Is Ugly/Uncouth.

#Health/congential
#is_smart_trigger					Has a smart trait.
#is_dumb_trigger					Has a dumb trait.
#is_strong_trigger					Has a strong trait.
#is_weak_trigger					Has a weak trait.
#well_treated_for_disease_trigger   Has a modifier relating to a positive treatement.
#poorly_treated_for_disease_trigger Has a modifier relating to a negative treatement.
#character_disease_trigger			Has a disease trait.
#has_symptom_trigger				Has a symptom trait.
#has_injury_trigger					Has an injury trait.
#is_maimed_trigger					Has a maimed trait
#has_severe_disability_trigger		Has a severe disability, which makes the characters life really hard.
#has_medium_disability_trigger		Has a medium disability, which limits the character to some extent but they can mostly live a full life.
#has_minor_disability_trigger		Has a minor disability, which does not limit the character in a physical sense, but is a source of ridicule and trauma.
#has_disability_trigger				Has a severe or light disability.
#has_mental_disorder_trigger		Has a mental disorder trait.
#has_fertile_trait_trigger			Has a fertile trait.
#is_fertile_trigger					Has a fertile trait and not any infertile traits.
#has_infertile_trait_trigger		Has an infertile trait.
#is_infertile_trigger				Has an infertile trait and not any fertile traits, OR is celibate OR is eunuch.
#has_negative_congenital_trigger	Has a negative congenital trait

#Diplomacy
#has_education_diplomacy_trigger	Has a diplomacy education trait.
#has_lifestyle_diplomacy_trigger	Has a diplomacy lifestyle trait.
#child_personality_diplomacy_triggerHas a child trait with diplomacy bonus.

#Martial
#has_education_martial_trigger		Has a martial education trait.
#has_lifestyle_martial_trigger		Has a martial lifestyle trait.
#child_personality_martial_trigger	Has a child trait with martial bonus.

#Stewardship
#has_education_stewardship_trigger	Has a stewardship education trait.
#has_lifestyle_stewardship_trigger	Has a stewardship  lifestyle trait.
#child_personality_stewardship_trigger	Has a child trait with stewardship bonus.

#Intrigue
#has_education_intrigue_trigger		Has a intrigue education trait.
#has_lifestyle_intrigue_trigger		Has a intrigue lifestyle trait.
#child_personality_intrigue_trigger	Has a child trait with intrigue bonus.

#Learning
#has_education_learning_trigger		Has a learning education trait.
#has_lifestyle_learning_trigger		Has a learning lifestyle trait.
#child_personality_learning_trigger	Has a child trait with learning bonus.
#is_learned_trigger					Has a scholarly trait, learning-oriented trait.

#has_any_lifestyle_trait			Has any of the above lifestyle traits.

#Religion
#has_crusade_trait_trigger			Has a crusade type trait.
#has_secret_religion_trait_trigger	Has a secret religion trait.

##AGREEABLE###

has_benevolent_trait_trigger = {
	OR = {
		trait = just
		trait = kind
		trait = charitable
		trait = patient
		trait = affectionate
	}
}

is_benevolent_trigger = {
	has_benevolent_trait_trigger = yes
	has_evil_trait_trigger = no
}

has_pleasant_trait_trigger = {
	OR = {
		trait = honest
		trait = gregarious
		trait = trusting
		trait = affectionate
		trait = playful
		trait = socializer
		trait = charitable
		trait = patient
		trait = kind
	}
}

has_pleasant_personality_trigger = {
	has_pleasant_trait_trigger = yes
	has_unpleasant_trait_trigger = no
}

has_pious_trait_trigger = {
	OR = {
		trait = theologian
		trait = celibate
		trait = chaste
		trait = humble
		trait = content
		trait = on_pilgrimage
		trait = pilgrim
		is_ascetic_trigger = yes
		#trait = hajjaj
		#trait = on_hajj
		#trait = ashari
		#trait = shieldmaiden
		trait = zealous
	}
}

is_pious_trigger = {
	has_pious_trait_trigger = yes
	has_impious_trait_trigger = no
}

has_virtue_trigger = {
	OR = {
		trait = chaste
		trait = temperate
		trait = charitable
		trait = diligent
		trait = patient
		trait = kind
		trait = humble
	}
}


##DISAGREEABLE##

has_evil_trait_trigger = {
	OR = {
		trait = arbitrary
		trait = cruel
		trait = impaler
	}
}

is_evil_trigger = {
	has_evil_trait_trigger = yes
	has_benevolent_trait_trigger = no
}

has_unpleasant_trait_trigger = {
	OR = {
		trait = deceitful
		trait = shy
		trait = paranoid
		trait = cruel
		trait = stubborn
		trait = haughty
		trait = brooding
		trait = impaler
		trait = greedy
		trait = wroth
		trait = envious
	}
}

has_unpleasant_personality_trigger = {
	has_unpleasant_trait_trigger = yes
	has_pleasant_trait_trigger = no
}

has_impious_trait_trigger = {
	OR = {
		trait = cynical
		#trait = bad_priest_christian
		#trait = bad_priest_muslim
		#trait = bad_priest_norse
		#trait = bad_priest_tengri
		#trait = bad_priest_zoroastrian
		#trait = bad_priest_aztec
		trait = hedonist
		trait = lustful
		trait = cannibal_trait
		trait = impaler
	}
}

is_impious_trigger = {
	has_impious_trait_trigger = yes
	has_pious_trait_trigger = no
}

has_vice_trigger = {
	OR = {
		trait = lustful
		trait = gluttonous
		trait = greedy
		trait = slothful
		trait = wroth
		trait = envious
		trait = proud
	}
}


##ATTRACTIVENESS##

has_attractive_trait_trigger = {
	OR = {
		trait = fair
		trait = groomed
		trait = just
		trait = brave
		trait = gregarious
		trait = seducer
		trait = seductress
		trait = robust
		trait = strong
		trait = socializer
	}
}

is_attractive_trigger = {
	has_attractive_trait_trigger = yes
	has_unattractive_trait_trigger = no
}

has_unattractive_trait_trigger = {
	OR = {
		trait = ugly
		trait = uncouth
		trait = feeble
		trait = dwarf
		trait = giant
		trait = clubfooted
		trait = harelip
		trait = hunchback
		trait = lisp
		trait = weak
		trait = lunatic
		trait = possessed
		trait = has_aztec_disease
		trait = syphilitic
		trait = leper
		trait = maimed
		trait = drunkard
		trait = gluttonous
		trait = craven
		trait = arbitrary
		trait = cruel
		trait = stubborn
		trait = blinded
		trait = eunuch
		trait = one_eyed
		trait = one_handed
		trait = one_legged
		trait = disfigured
		trait = mangled
		trait = severely_injured
		trait = flu
		trait = dysentery
		trait = food_poisoning
		trait = cholera
		trait = stomach_rot
		trait = witches_pox
		trait = greenspore
		trait = rabies
		trait = infection
		trait = rash
		trait = vomiting
		trait = diarrhea
		trait = cough
		trait = slovenly
	}
}

is_unattractive_trigger = {
	has_unattractive_trait_trigger = yes
	has_attractive_trait_trigger = no
}


##HEALTH/CONGENTIAL##
is_agile_trigger = {
	trait = agile
}
is_smart_trigger = {
	OR = {
		trait = genius
		trait = quick
		trait = shrewd
		trait = perceptive
	}
}

is_dumb_trigger = {
	OR = {
		trait = dull
		trait = slow
		trait = imbecile 
	}
}

is_strong_trigger = {
	OR = {
		trait = strong
		trait = robust
		trait = raht
	}
}

is_tall_trigger = {
	OR = {
		trait = tall
		trait = giant
	}
}
is_short_trigger = {
	OR = {
		trait = dwarf
		trait = short
	}
}

is_weak_trigger = {
	OR = {
		trait = weak
		trait = feeble
	}
}

well_treated_for_disease_trigger = {
	OR = {
		has_character_modifier = mystic_treatment_decent
		has_character_modifier = symptom_treatment_1
		has_character_modifier = symptom_treatment_2
		has_character_modifier = symptom_treatment_3
		has_character_modifier = symptom_treatment_4	
		has_character_modifier = successful_treatment_1
		has_character_modifier = successful_treatment_2
		has_character_modifier = successful_treatment_3
	}	
}
poorly_treated_for_disease_trigger = {
	OR = {
		has_character_modifier = mystic_treatment_poor
		has_character_modifier = mystic_treatment_terrible
		has_character_modifier = failed_treatment_1
		has_character_modifier = failed_treatment_2
	}	
}

character_disease_trigger = {
	OR = {
		trait = has_tuberculosis
		trait = has_typhoid_fever
		trait = has_typhus
		trait = has_bubonic_plague
		trait = has_knahaten_flu
		trait = has_measles
		trait = has_small_pox
		trait = has_aztec_disease
		trait = has_swamp_rot
		trait = syphilitic
		trait = flu
		trait = dysentery
		trait = gout
		trait = food_poisoning
		trait = rabies
		trait = cancer
		trait = pneumonic
		trait = cholera
		trait = dampworm
		trait = witches_pox
		trait = greenspore
		trait = rockjoint
		trait = stomach_rot
		trait = chrondiasis
		trait = dancing_plague
		trait = scurvy
		trait = ill
		trait = leper
		trait = lovers_pox
	}
}

has_disease_trigger = {
	OR = {
		trait = has_tuberculosis
		trait = has_typhoid_fever
		trait = has_typhus
		trait = has_bubonic_plague
		trait = has_knahaten_flu
		trait = has_measles
		trait = has_small_pox
		trait = has_aztec_disease
		trait = has_swamp_rot
		trait = syphilitic
		trait = flu
		trait = dysentery
		trait = gout
		trait = food_poisoning
		trait = rabies
		trait = cancer
		trait = pneumonic
		trait = cholera
		trait = dampworm
		trait = witches_pox
		trait = greenspore
		trait = rockjoint
		trait = stomach_rot
		trait = chrondiasis
		trait = dancing_plague
		trait = scurvy
		trait = ill
		trait = leper
		trait = lovers_pox
	}
}


has_symptom_trigger = {
	OR = {
		trait = infection
		trait = malaise
		trait = fatigue
		trait = abdominal_pain
		trait = headache
		trait = rash
		trait = cramps
		trait = chest_pain
		trait = vomiting
		trait = diarrhea
		trait = fever
		trait = cough
	}
}

has_minor_disease_trigger = {
	OR = {
		trait = malaise
		trait = fatigue
		trait = abdominal_pain
		trait = headache
		trait = rash
		trait = cramps
		trait = chest_pain
		trait = vomiting
		trait = diarrhea
		trait = fever
		trait = cough
		trait = ill
		trait = lovers_pox
		trait = flu
	}
}

has_injury_trigger = {
	OR = {
		trait = wounded
		trait = severely_injured
	}
}

is_maimed_trigger = {
	OR = {
		trait = maimed
		trait = one_eyed
		trait = one_handed 
		trait = one_legged 
		trait = disfigured 
		trait = mangled
	}
}

has_severe_disability_trigger = {
	OR = {
		trait = infirm
		trait = mangled
		trait = inbred
		trait = blinded
		trait = blind_moth
		trait = incapable
		trait = maimed
	}
}

has_medium_disability_trigger = {
	OR = {
		trait = one_legged
		trait = one_handed
		trait = one_eyed
		trait = clubfooted
		trait = hunchback
		trait = dwarf
		trait = giant
	}
}

has_minor_disability_trigger = {
	OR = {
		trait = disfigured
		trait = eunuch
		trait = harelip
		trait = stutter
		trait = lisp
	}
}

has_disability_trigger = {
	OR = {
		has_severe_disability_trigger = yes
		has_medium_disability_trigger = yes
		has_minor_disability_trigger = yes
	}
}

has_mental_disorder_trigger = {
	OR = {
		trait = stressed
		trait = depressed
		trait = lunatic
		trait = possessed
		trait = drunkard
	}
}

has_fertile_trait_trigger = {
	OR = {
		trait = sign_lover
		trait = fortitude
		trait = p_kmara
		trait = p_mara
		trait = p_omara
		trait = p_morwha
		trait = p_panuiel
		trait = p_spring
		trait = p_bhut
		trait = strong
		trait = raht
		trait = hedonist
		trait = lustful
		trait = dancing_plague
	}
}

is_fertile_trigger = {
	has_fertile_trait_trigger = yes
	has_infertile_trait_trigger = no
}

has_infertile_trait_trigger = {
	OR = {
		trait = homosexual
		trait = eunuch
		trait = stressed
		trait = depressed
		trait = ill
		trait = pneumonic
		trait = leper
		trait = syphilitic
		trait = has_aztec_disease
		trait = has_knahaten_flu
		trait = infirm
		trait = incapable
		trait = inbred
		trait = weak
		trait = celibate
		trait = chaste
		trait = mangled
		trait = severely_injured
		trait = dysentery
		trait = food_poisoning
		trait = cancer
		trait = cholera
		trait = stomach_rot
	}
}

is_infertile_trigger = {
	OR = {
		AND = {
			has_infertile_trait_trigger = yes
			has_fertile_trait_trigger = no
		}
		trait = eunuch
		trait = celibate
	}
}


##DIPLOMACY##

has_education_diplomacy_trigger = {
	is_diplomat = yes
}

has_lifestyle_diplomacy_trigger = {
	OR = {
		trait = socializer
		trait = gamer
		trait = hedonist
	}
}

child_personality_diplomacy_trigger = {
	OR = {
		trait = affectionate
		trait = playful
	}
}


##MARTIAL##

has_education_martial_trigger = {
	is_warrior = yes
}

has_lifestyle_martial_trigger = {
	OR = {
		trait = duelist
		trait = hunter
		trait = strategist
	}
}

child_personality_martial_trigger = {
	OR = {
		trait = haughty
		trait = rowdy
	}
}


##STEWARDSHIP##

has_education_stewardship_trigger = {
	is_magistrate = yes
}

has_lifestyle_stewardship_trigger = {
	OR = {
		trait = administrator
		trait = architect
		trait = gardener
	}
}

child_personality_stewardship_trigger = {
	OR = {
		trait = conscientious
		trait = fussy
		trait = curious
	}
}


##INTRIGUE##

has_education_intrigue_trigger = {
	is_agent = yes
}

has_lifestyle_intrigue_trigger = {
	OR = {
		trait = schemer
		trait = impaler
		trait = seducer
		trait = seductress
	}
}

child_personality_intrigue_trigger = {
	OR = {
		trait = willful
		trait = brooding
		trait = indolent
	}
}


##LEARNING##

has_education_learning_trigger = {
	is_mage = yes
}

has_lifestyle_learning_trigger = {
	OR = {
		trait = scholar
		trait = theologian
		trait = mystic
	}
}

child_personality_learning_trigger = {
	OR = {
		trait = timid
		trait = idolizer
	}
}

is_learned_trigger = {
	OR = {
		trait = erudite
		trait = scholar
		trait = mage_5
		trait = mage_4
		trait = mage_3
		trait = diplomat_5
		trait = diplomat_4
		trait = magistrate_5
		trait = magistrate_4
	}
}


has_any_lifestyle_trait = {
	OR = {
		has_lifestyle_diplomacy_trigger = yes
		has_lifestyle_martial_trigger = yes
		has_lifestyle_stewardship_trigger = yes
		has_lifestyle_intrigue_trigger = yes
		has_lifestyle_learning_trigger = yes
	}
}


##RELIGION##

has_crusade_trait_trigger = {
	# OR = {
		# AND = {
			# OR = {
				# religion = norse_pagan
				# religion = norse_pagan_reformed
			# }
			# trait = valhalla_bound
		# }
		# AND = {
			# OR = {
				# religion = tengri_pagan
				# religion = tengri_pagan_reformed
			# }
			# trait = tengri_warrior
		# }
		# AND = {
			# OR = {
				# religion = baltic_pagan
				# religion = baltic_pagan_reformed
			# }
			# trait = romuvas_own
		# }
		# AND = {
			# OR = {
				# religion = finnish_pagan
				# religion = finnish_pagan_reformed
			# }
			# trait = ukkos_shield
		# }
		# AND = {
			# OR = {
				# religion = aztec
				# religion = aztec_reformed
			# }
			# trait = eagle_warrior
		# }
		# AND = {
			# OR = {
				# religion = slavic_pagan
				# religion = slavic_pagan_reformed
			# }
			# trait = peruns_chosen
		# }
		# AND = {
			# OR = {
				# religion = west_african_pagan
				# religion = west_african_pagan_reformed
			# }
			# trait = nyames_shield
		# }
		# AND = {
			# OR = {
				# religion = zun_pagan
				# religion = zun_pagan_reformed
			# }
			# trait = sun_warrior
		# }
		# AND = {
			# OR = {
				# religion = hellenic_pagan
				# religion = hellenic_pagan_reformed
			# }
			# trait = ares_own
		# }
		# AND = {
			# religion_group = muslim
			# trait = mujahid
		# }
		# AND = {
			# religion_group = christian
			# trait = crusader
		# }
		# AND = {
			# religion_group = zoroastrian_group
			# trait = gondi_shahansha
		# }
		# AND = {
			# religion_group = jewish_group
			# trait = shaddai
		# }
	# }
}

has_secret_religion_trait_trigger = {
	custom_tooltip = {
		text = no_secret_religion
		has_secret_religion = yes
	}
}

####MERC LEADER/COUNCIL JOB####

#Used with character interaction to replace merc leader. DO NOT REMOVE
can_be_mercenary_leader_potential_trigger = {
	prisoner = no
	is_ruler = no
	is_adult = yes
	
	NOR = { 
		trait = incapable
		is_inaccessible_trigger = yes
		is_ascetic_trigger = yes
	}
	same_realm = FROM
	OR = {
		is_female = no
		FROM = {
			has_law = true_cognatic_succession
		}
	}
}
#Used with character interaction to replace merc leader. DO NOT REMOVE
can_be_mercenary_leader_allow_trigger = {
	is_adult = yes
	liege = { character = FROM }
	custom_tooltip = {
		text = mercenary_martial_education_tooltip
		hidden_tooltip = {
			OR = {
				is_assassin = yes
				is_barbarian = yes
				is_battlemage = yes
				is_knight = yes
				is_nightblade = yes
				is_warrior = yes
			}
		}
	}
}

#Used with character interaction to replace merc leader. DO NOT REMOVE
replace_mercenary_captain_potential_trigger = {
	is_ruler = yes
	mercenary = yes
	primary_title = {
		has_title_flag = ze_dyn_merc
		band_creator = {
			character = FROM
		}
	}
}

#Used with character interaction to replace merc leader. DO NOT REMOVE
replace_mercenary_captain_allow_trigger = {
	primary_title = {
		NOT = { has_raised_standing_troops = yes }
		band_creator = {
			character = FROM
		}
	}
}

#Used with character interaction to swap council job. DO NOT REMOVE
change_council_job_potential_trigger = {
	liege = { character = FROM }
	NOT = {
		has_job_title = job_spiritual
	}
	OR = {
		AND = {
			OR = {
				has_minor_title = title_councilmember_king
				has_minor_title = title_councilmember_emperor
			}
			OR = {
				can_be_chancellor_trigger = yes
				can_be_marshal_trigger = yes
				can_be_treasurer_trigger = yes
				can_be_spymaster_trigger = yes
				can_be_spiritual_trigger = yes
			}
		}
		AND = {
			OR = {
				has_job_title = job_chancellor
				has_job_title = job_marshal
				has_job_title = job_treasurer
				has_job_title = job_spymaster
				has_job_title = job_spiritual
			}
			liege = {
				OR = {
					job_chancellor = {
						NOT = { character = ROOT }
						can_swap_job_title = ROOT
					}
					job_marshal = {
						NOT = { character = ROOT }
						can_swap_job_title = ROOT
					}
					job_treasurer = {
						NOT = { character = ROOT }
						can_swap_job_title = ROOT
					}
					job_spymaster = {
						NOT = { character = ROOT }
						can_swap_job_title = ROOT
					}
					job_spiritual = {
						NOT = { character = ROOT }
						can_swap_job_title = ROOT
					}
				}
			}
		}
	}
}

can_be_chancellor_trigger = {
	is_adult = yes
	independent = no
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { has_character_modifier = resigned_in_anger }
	NOT = { 
		liege = { 
			has_opinion_modifier = {
				who = ROOT	
				modifier = opinion_resigned_from_council 
			} 
		} 
	}
}

can_be_marshal_trigger = {
	is_adult = yes
	independent = no
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { has_character_flag = guru }
	NOT = { has_character_modifier = resigned_in_anger }
	NOT = { 
		liege = { 
			has_opinion_modifier = {
				who = ROOT	
				modifier = opinion_resigned_from_council 
			} 
		} 
	}
}

can_be_treasurer_trigger = {
	is_adult = yes	
	independent = no
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { has_character_modifier = resigned_in_anger }
	NOT = { 
		liege = { 
			has_opinion_modifier = {
				who = ROOT	
				modifier = opinion_resigned_from_council 
			} 
		} 
	}
}

can_be_spymaster_trigger = {
	is_adult = yes
	independent = no
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { has_character_modifier = resigned_in_anger }
	NOT = { 
		liege = { 
			has_opinion_modifier = {
				who = ROOT	
				modifier = opinion_resigned_from_council 
			} 
		} 
	}
}

can_be_spiritual_trigger = {
	is_adult = yes
	independent = no
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { has_character_modifier = resigned_in_anger }
	NOT = { 
		liege = { 
			has_opinion_modifier = {
				who = ROOT	
				modifier = opinion_resigned_from_council 
			} 
		} 
	}

	liege = {
		religion = ROOT
	}
}

can_be_councilmember_king_trigger = {
	is_adult = yes
	independent = no
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { has_character_modifier = resigned_in_anger }
	NOT = { 
		liege = { 
			has_opinion_modifier = {
				modifier = opinion_resigned_from_council 
				who = ROOT
			}
		} 
	}
}

can_be_councilmember_emperor_trigger = {
	is_adult = yes
	independent = no
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { has_character_modifier = resigned_in_anger }
	NOT = { 
		liege = { 
			has_opinion_modifier = {
				who = ROOT	
				modifier = opinion_resigned_from_council 
			} 
		} 
	}
}


###REAPER'S DUE####

can_be_maimed_trigger = {
	OR = {
		AND = {
			NOT = { has_dlc = "Reapers" }
			NOT = { trait = maimed }
		}
		AND = {
			has_dlc = "Reapers"
			NOT = {
				trait = one_eyed
				trait = one_handed 
				trait = one_legged 
				trait = disfigured 
				trait = mangled
			}
		}
	}
}

physician_bad_trigger = { 
	OR = {
		has_severe_disability_trigger = yes
		has_mental_disorder_trigger = yes
	}
}

physician_good_trigger = { 
	OR = {
		is_learned_trigger = yes
		trait = scholar
		trait = erudite
		is_healer = yes
		trait = priest_3
		is_master_mage = yes
	} 
}

is_inaccessible_trigger = { #Remember to write this "is_inaccessible_trigger = no" when scripting, or the tooltip will be messed up (it reads "Is NOT in Hiding, in Seclusion, or out traveling")
	custom_tooltip = {
		text = is_inaccessible_tooltip
		hidden_tooltip = {
			OR = {
				has_character_flag = flag_holding_great_tribal_festival
				is_indisposed = yes
				trait = in_hiding
#				trait = on_hajj
				trait = on_pilgrimage
#				trait = on_indian_pilgrimage
#				trait = kow_tow_travels
				trait = travelling
				trait = troubled_pregnancy
				trait = pregnancy_finishing
				has_character_modifier = mother_minor_rest
				has_character_modifier = in_seclusion
				has_character_modifier = in_meditation
				has_character_modifier = doing_penance
				has_character_modifier = out_traveling
			}
		}
	}
}

prefers_men_trigger = {
	OR = {
		AND = {
			is_female = yes
			NOT = { trait = homosexual }
		}
		AND = {
			is_female = no
			trait = homosexual
		}
	}
}
prefers_women_trigger = {
	OR = {
		AND = {
			is_female = no
			NOT = { trait = homosexual }
		}
		AND = {
			is_female = yes
			trait = homosexual
		}
	}
}

prev_attraction_trigger = {
	#Returns yes when PREV is attracted to the scoped character, based on sex
	OR = {
		AND = {
			is_female = yes
			PREV = { 
				OR = {
					prefers_women_trigger = yes
					trait = bisexual
				}
			}
		}
		AND = {
			is_female = no
			PREV = { 
				OR = {
					prefers_men_trigger = yes
					trait = bisexual
				}
			}
		}
	}
}

root_attraction_trigger = {
	#Returns yes when ROOT is attracted to the scoped character, based on sex
	OR = {
		AND = {
			is_female = yes
			ROOT = { 
				OR = {
					prefers_women_trigger = yes
					trait = bisexual
				}
			}
		}
		AND = {
			is_female = no
			ROOT = { 
				OR = {
					prefers_men_trigger = yes
					trait = bisexual
				}
			}
		}
	}
}

attacted_to_root_trigger = {
	#Returns yes when scoped character is attracted to ROOT, based on sex
	OR = {
		AND = {
			ROOT = { is_female = yes }
			OR = {
				prefers_women_trigger = yes
				trait = bisexual
			}
		}
		AND = {
			ROOT = { is_female = no }
			OR = {
				prefers_men_trigger = yes
				trait = bisexual
			}
		}
	}
}

attacted_to_prev_trigger = {
	OR = {
		AND = {
			PREV = { is_female = yes }
			OR = {
				prefers_women_trigger = yes
				trait = bisexual
			}
		}
		AND = {
			PREV = { is_female = no }
			OR = {
				prefers_men_trigger = yes
				trait = bisexual
			}
		}
	}
}

is_unimportant_trigger = {
	NOR = {
		is_married = yes
		is_landed = yes
		has_job_title = yes
		has_minor_title = yes
		AND = {
			NOT = { dynasty = none }
			num_of_dynasty_members = 2
		}
		any_lover = { ai = no }
		any_close_relative = { ai = no }
		any_friend = { ai = no }
		any_rival = { ai = no }
		any_consort = { ai = no }
		num_of_claims = 1
		has_character_flag = eternal_life_mystic
		has_character_modifier = in_seclusion
		has_character_modifier = elder_long_life_modifier
		is_immortal = yes
	}
}

sad_example_trigger = {
	age = 30
	is_married = no
	NOT = { num_of_children = 1 }
}

has_epidemic_disease_trigger = {
	OR = {
		trait = has_tuberculosis
		trait = has_typhoid_fever
		trait = has_typhus
		trait = has_bubonic_plague
		trait = has_knahaten_flu
		trait = has_swamp_rot
		trait = has_measles
		trait = has_small_pox
		trait = has_aztec_disease
	}
}

developing_epidemic_disease_trigger = {
	OR = {
		has_character_flag = got_tuberculosis
		has_character_flag = got_typhoid_fever
		has_character_flag = got_typhus
		has_character_flag = got_bubonic_plague
		has_character_flag = got_knahaten_flu
		has_character_flag = got_swamp_rot
		has_character_flag = got_measles
		has_character_flag = got_small_pox
		has_character_flag = got_aztec_disease
	}
}

can_be_prophet_of_doom_trigger = {
	is_adult = yes
	is_married = no
	trait = zealous
	is_landed = no
	
	OR = {
		trait = ambitious
#		trait = misguided_warrior
#		trait = elusive_shadow
		trait = lunatic
		trait = possessed
		trait = paranoid
		trait = stubborn
	}
	NOR = {
		trait = content
		trait = cynical
		trait = temperate
		is_main_spouse = yes
		is_landed = yes
		is_close_relative = ROOT
	}
	ai = yes
}

death_murder_trigger = {
	OR = {
		death_murder_unknown_trigger = yes
		death_murder_known_trigger = yes
	}
	
}

death_murder_unknown_trigger = {
	OR = {
		death_reason = death_murder_unknown
		death_reason = death_murder_unknown_poison
		death_reason = death_murder_unknown_fall
		death_reason = death_murder_unknown_arrow
		death_reason = death_murder_unknown_beheading
		death_reason = death_murder_unknown_snakes
		death_reason = death_murder_unknown_strangle
		death_reason = death_murder_unknown_hashashin
		death_reason = death_murder_unknown_fear
		death_reason = death_murder_unknown_lightning
		death_reason = death_murder_unknown_combustion
		death_reason = death_murder_unknown_crows
		death_reason = death_murder_unknown_possessed_fall
		death_reason = death_murder_vampire_unknown
		death_reason = death_murder_lycan_unknown
	}	
}

death_murder_known_trigger = {
	OR = {
		death_reason = death_murder
		death_reason = death_murder_poison
		death_reason = death_murder_fall
		death_reason = death_murder_drowning
		death_reason = death_murder_butchered
		death_reason = death_murder_arrow
		death_reason = death_murder_beheading
		death_reason = death_murder_snakes
		death_reason = death_murder_strangle
		death_reason = death_murder_hashashin
		death_reason = death_murder_vampire
		death_reason = death_murder_lycan
	}	
}

death_execution_trigger = {
	OR = {
		death_reason = death_execution
		death_reason = death_execution_crushing
		death_reason = death_execution_ash
		death_reason = death_execution_burning
		death_reason = death_execution_hdq
		death_reason = death_execution_bear
		death_reason = death_execution_lion
		death_reason = death_execution_snake_pit
		death_reason = death_execution_disembowelment
		death_reason = death_execution_boiling
		death_reason = death_execution_sawing
		death_reason = death_execution_hunt
		death_reason = death_execution_live_burial
		death_reason = death_execution_hanging
		death_reason = death_execution_immurement
		death_reason = death_execution_beheading
		death_reason = death_execution_wine
		death_reason = death_execution_poison
		death_reason = death_execution_flaying
		death_reason = death_execution_impaling
		death_reason = death_execution_tiger
		death_reason = death_execution_elephants
		death_reason = death_execution_bamboo
		death_reason = death_execution_stoning
		death_reason = death_execution_crucifixion
		death_reason = death_execution_blood_eagle
		death_reason = death_execution_scaphism
		death_reason = death_execution_drowning_pit
		death_reason = death_execution_garrotting
		death_reason = death_execution_horses
		death_reason = death_execution_back_breaking
		death_reason = death_execution_wheel
		death_reason = death_execution_boar
		death_reason = death_execution_eaten
		death_reason = death_execution_aztec_sacrifice
		death_reason = death_executed_by_chinese_emperor
		death_reason = death_execution_brazen_bull
		death_reason = death_execution_macabre_banquet
		death_reason = death_execution_blood_drain
		death_reason = death_execution_sea_serpents
		death_reason = death_execution_sharks
		death_reason = death_execution_shouted_to_pieces
		death_reason = death_execution_shouted_fall
		death_reason = death_execution_wamasu
	}	
}

death_sacrificed_trigger = {
	OR = {
		death_reason = death_sacrificed
		death_reason = death_sacrificed_norse
		death_reason = death_sacrificed_ancestors
		death_reason = death_execution_aztec_sacrifice
	}	
}

death_accident_trigger = {
	OR = {
		death_reason = death_accident
		death_reason = death_accident_generic_beast
		death_reason = death_accident_bear
		death_reason = death_accident_boar
		death_reason = death_accident_drowning
		death_reason = death_accident_arrow
		death_reason = death_accident_tiger
		death_reason = death_accident_snakes
		death_reason = death_accident_fall
		death_reason = death_basking_shark
		death_reason = death_hornets
		death_reason = death_dragonfire
	}
}

death_suicide_trigger = {
	OR = {
		death_reason = death_suicide
		death_reason = death_suicide_fall
		death_reason = death_suicide_hanging
		death_reason = death_suicide_poison
	}
}

# Very usable! If poorly named
block_general_event_trigger = {
	OR = {	
		is_adult = no
		trait = incapable
		prisoner = yes
		is_inaccessible_trigger = yes
		hidden_trigger = { is_alive = no }
	}
}

gender_equality_trigger = {
}

male_can_hold_minor_title_trigger = {
}

female_can_hold_minor_title_trigger = {
}

female_can_hold_minor_commander_title_trigger = {
}

has_minor_deity_trigger = {
}

#Has same education as prev?
has_prev_education_trigger = {
	OR = {
		AND = {
			has_education_martial_trigger = yes
			PREV = { has_education_martial_trigger = yes }
		}
		AND = {
			has_education_diplomacy_trigger = yes
			PREV = { has_education_diplomacy_trigger = yes }
		}
		AND = {
			has_education_stewardship_trigger = yes
			PREV = { has_education_stewardship_trigger = yes }
		}
		AND = {
			has_education_intrigue_trigger = yes
			PREV = { has_education_intrigue_trigger = yes }
		}
		AND = {
			has_education_learning_trigger = yes
			PREV = { has_education_learning_trigger = yes }
		}
	}
}

useless_character_trigger = {
	OR = {
		NOT = { health = 2.5 }
		trait = lunatic
		trait = maimed
		trait = infirm
		trait = incapable
		trait = mangled
		trait = severely_injured
		trait = imbecile
		trait = inbred
	}
}

#True religion triggers
true_religion_eight_divines_trigger = {
	true_religion = eight_divines
}

true_religion_nine_divines_trigger = {
	true_religion = nine_divines
}

true_religion_maruhkati_trigger = {
	true_religion = maruhkati
}

true_religion_satakal_trigger = {
	true_religion = satakal
}

true_religion_alikr_trigger = {
	true_religion = alikr
}

true_religion_green_pact_trigger = {
	true_religion = green_pact
}

true_religion_auriel_trigger = {
	true_religion = auriel
}

true_religion_almsivi_trigger = {
	true_religion = almsivi
}

true_religion_nerevarine_trigger = {
	true_religion = nerevarine
}

true_religion_almsivi_old_velothi_trigger = {
	true_religion = almsivi_old_velothi
}

true_religion_reclamationist_trigger = {
	true_religion = reclamationist
}

true_religion_daedra_azura_trigger = {
	true_religion = daedra_azura
}

true_religion_daedra_boethiah_trigger = {
	true_religion = daedra_boethiah
}

true_religion_daedra_mehrunes_trigger = {
	true_religion = daedra_mehrunes
}

true_religion_daedra_molag_trigger = {
	true_religion = daedra_molag
}

true_religion_daedra_meridia_trigger = {
	true_religion = daedra_meridia
}

true_religion_daedra_namira_trigger = {
	true_religion = daedra_namira
}

true_religion_daedra_mephala_trigger = {
	true_religion = daedra_mephala
}

true_religion_daedra_peryite_trigger = {
	true_religion = daedra_peryite
}

true_religion_daedra_vaermina_trigger = {
	true_religion = daedra_vaermina
}

true_religion_daedra_nocturnal_trigger = {
	true_religion = daedra_nocturnal
}

true_religion_daedra_malacath_trigger = {
	true_religion = daedra_malacath
}

true_religion_daedra_jyggalag_trigger = {
	true_religion = daedra_jyggalag
}

true_religion_daedra_sheogorath_trigger = {
	true_religion = daedra_sheogorath
}

true_religion_daedra_clavicus_trigger = {
	true_religion = daedra_clavicus
}

true_religion_daedra_hermaeus_trigger = {
	true_religion = daedra_hermaeus
}

true_religion_daedra_sanguine_trigger = {
	true_religion = daedra_sanguine
}

true_religion_daedra_hircine_trigger = {
	true_religion = daedra_hircine
}

true_religion_riddlethar_trigger = {
	true_religion = riddlethar
}

true_religion_alkosh_trigger = {
	true_religion = alkosh
}

true_religion_baan_dar_trigger = {
	true_religion = baan_dar
}

true_religion_hist_trigger = {
	true_religion = hist
}

true_religion_old_gods_trigger = {
	true_religion = old_gods
}

true_religion_forsworn_heresy_trigger = {
	true_religion = forsworn_heresy
}

true_religion_king_of_worms_cult_trigger = {
	true_religion = king_of_worms_cult
}

true_religion_sithis_trigger = {
	true_religion = sithis
}

true_religion_animism_trigger = {
	true_religion = animism
}

true_religion_dragon_cult_trigger = {
	true_religion = dragon_cult
}

true_religion_anuic_skaal_trigger = {
	true_religion = anuic_skaal
}

true_religion_ideal_masters_trigger = {
	true_religion = ideal_masters
}

true_religion_pyandoneaic_trigger = {
	true_religion = pyandoneaic
}

true_religion_postorgnumic_trigger = {
	true_religion = postorgnumic
}

true_religion_five_courts_trigger = {
	true_religion = five_courts
}

true_religion_bhut_cult_trigger = {
	true_religion = bhut_cult
}

true_religion_shani_cult_trigger = {
	true_religion = shani_cult
}

true_religion_tangmo_pantheon_trigger = {
	true_religion = tangmo_pantheon
}

true_religion_night_court_trigger = {
	true_religion = night_court
}

true_religion_sun_court_trigger = {
	true_religion = sun_court
}

true_religion_kapotun_pantheon_trigger = {
	true_religion = kapotun_pantheon
}

true_religion_black_dragon_trigger = {
	true_religion = black_dragon
}

true_religion_tiger_pantheon_trigger = {
	true_religion = tiger_pantheon
}

true_religion_kamal_pantheon_trigger = {
	true_religion = kamal_pantheon
}

true_religion_winter_wind_trigger = {
	true_religion = winter_wind
}

true_religion_sea_worship_trigger = {
	true_religion = sea_worship
}

true_religion_brethren_trigger = {
	true_religion = brethren
}

true_religion_group_human_pantheon_trigger = {
	true_religion_group = human_pantheon
}

true_religion_group_yokudan_pantheon_trigger = {
	true_religion_group = yokudan_pantheon
}

true_religion_group_mer_pantheon_trigger = {
	true_religion_group = mer_pantheon
}

true_religion_group_tribunal_trigger = {
	true_religion_group = tribunal
}

true_religion_group_daedra_trigger = {
	true_religion_group = daedra
}

true_religion_group_khajiit_pantheon_trigger = {
	true_religion_group = khajiit_pantheon
}

true_religion_group_hist_group_trigger = {
	true_religion_group = hist_group
}

true_religion_group_reach_faiths_trigger = {
	true_religion_group = reach_faiths
}

true_religion_group_old_faith_trigger = {
	true_religion_group = old_faith
}

true_religion_group_void_religions_trigger = {
	true_religion_group = void_religions
}

true_religion_group_atmoran_pantheon_trigger = {
	true_religion_group = atmoran_pantheon
}

true_religion_group_oblivion_religions_trigger = {
	true_religion_group = oblivion_religions
}

true_religion_group_tsaesci_courts_trigger = {
	true_religion_group = tsaesci_courts
}

true_religion_group_tangmo_religions_trigger = {
	true_religion_group = tangmo_religions
}

true_religion_group_potun_religions_trigger = {
	true_religion_group = potun_religions
}

true_religion_group_kamal_religions_trigger = {
	true_religion_group = kamal_religions
}

true_religion_group_islander_religions_trigger = {
	true_religion_group = islander_religions
}

true_religion_group_maormer_religion_trigger = {
	true_religion_group = maormer_religion
}

relationship_with_root_trigger = {
	OR = {
		is_lover = ROOT
		is_friend = ROOT
		is_rival = ROOT
	}
}

is_widow_or_widower_trigger = {
	is_married = no
	any_spouse_even_if_dead = {
		always = yes
	}
}
FROMs_religion_is_playable_trigger = {
	always = yes
}

ROOTs_religion_is_playable_trigger = { #For targeted decision where FROM is the player
	always = yes
}
###Use the actual is_<family member>_of = scope triggers now
family_of_root_trigger = { #use is_blood_relative_of_root_trigger for all relatives
	OR = {
		is_close_relative = ROOT #spouse, parents, children, siblings, grandparents, grandchildren
		cousin_of_root_trigger = yes #cousins
		sibling_child_of_root_trigger = yes #nephews, nieces
		parent_sibling_of_root_trigger = yes #aunts, uncles
		sibling_in_law_of_root_trigger = yes #brothers and sisters in law
	}
}

cousin_of_root_trigger = {
	is_cousin_of = ROOT
}

sibling_of_root_trigger = {
	sibling = ROOT
}

sibling_child_of_root_trigger = {
	is_nibling_of = ROOT
}

parent_sibling_of_root_trigger = {
	is_aunt_uncle_of = ROOT
}

grandchild_of_root_trigger = {
	is_grandchild_of = ROOT
}

sibling_in_law_of_root_trigger = {
	OR = {
		mother_even_if_dead = { any_child = { any_spouse = { character = ROOT } } }
		father_even_if_dead = { any_child = { any_spouse = { character = ROOT } } }
		any_spouse = { mother_even_if_dead = { any_child = { character = ROOT } } }
		any_spouse = { father_even_if_dead = { any_child = { character = ROOT } } }
	}
}

relative_in_law_of_root_trigger = {
	OR = {
		any_child = { any_spouse = { character = ROOT } }
		#any_spouse = { mother_even_if_dead = { any_child = { any_spouse = { character = ROOT } } } }
		#any_spouse = { father_even_if_dead = { any_child = { any_spouse = { character = ROOT } } } }
	}
}

is_murder_quest_target_of_prev_trigger = {
	PREVPREV = {
		has_quest = quest_the_assassins_assassination
		quest_target = { character = PREVPREV }
	}
}

is_murder_quest_target_of_root_trigger = {
	ROOT = {
		has_quest = quest_the_assassins_assassination
		quest_target = { character = PREVPREV }
	}
}

assassins_appropriate_target_trigger = {
	is_within_diplo_range = ROOT
	is_adult = yes
	is_quest_target = no

	OR = {
		is_ruler = no
		AND = {
		#	ROOT = {
		#		society_rank = {
		#			rank == 3
		#			society = the_assassins
		#		}
		#	}
			primary_title = { higher_real_tier_than = COUNT }
		}
		AND = {
		#	ROOT = {
		#		society_rank = {
		#			rank == 2
		#			society = the_assassins
		#		}
		#	}
			primary_title = { lower_real_tier_than = EMPEROR }
		}
		AND = {
		#	ROOT = {
		#		society_rank = {
		#			rank == 1
		#			society = the_assassins
		#		}
		#	}
			primary_title = { lower_real_tier_than = DUKE }
		}
	}
}

interesting_face_trigger = {
	OR = {
		trait = fair
		trait = groomed
		trait = ugly
		trait = uncouth
		has_scarred_trait_trigger = yes
		is_ill = yes
		trait = disfigured
		trait = blinded
		trait = one_eyed
		trait = leper
		trait = harelip
		is_strong_trigger = yes
		is_weak_trigger = yes
		trait = lunatic
		trait = possessed
		trait = rabies
	}
}

can_pay_assassins_debt = {
	OR = {
		AND = {
			is_variable_equal = { which = assassins_debt value = 50 }
			wealth = 50
		}
		AND = {
			is_variable_equal = { which = assassins_debt value = 250 }
			wealth = 250
		}
		AND = {
			is_variable_equal = { which = assassins_debt value = 300 }
			wealth = 300
		}
		AND = {
			is_variable_equal = { which = assassins_debt value = 500 }
			wealth = 500
		}
	}
}

is_rich_holding = {
	OR = {
		calc_true_if = {
			amount = 2
			has_building = ca_keep_3
			has_building = ca_keep_4
			has_building = ca_keep_5
			has_building = ca_keep_6
			has_building = ca_town_3
			has_building = ca_town_4
			has_building = ca_town_5
			has_building = ca_town_6
			has_building = tp_monastery_3
			has_building = tp_monastery_4
			has_building = tp_monastery_5
			has_building = tp_monastery_6
			has_building = tp_town_3
			has_building = tp_town_4
			has_building = tp_town_5
			has_building = tp_town_6
		}
		has_building = ct_marketplace_3
		has_building = ct_marketplace_4
		has_building = ct_marketplace_5
		has_building = ct_marketplace_6

	}
}
is_richer_holding = {
	
	OR = {
		calc_true_if = {
			amount = 2
			has_building = ca_keep_5
			has_building = ca_keep_6
			has_building = ca_town_5
			has_building = ca_town_6
			has_building = tp_monastery_5
			has_building = tp_monastery_6
			has_building = tp_town_5
			has_building = tp_town_6
		}
		has_building = ct_marketplace_5
		has_building = ct_marketplace_6
	}
}

has_society_currency_trivial_trigger = {
	trigger_if = {
		limit = { is_immortal = yes }
		society_currency >= 25
	}
	trigger_else_if = {
		limit = { is_long_lived = yes }
		society_currency >= 20
	}
	trigger_else_if = {
		limit = { is_long_lived = no }
		society_currency >= 10
	}
}

has_society_currency_trivial_trigger_scaling = {
	trigger_if = {
		limit = { is_immortal = yes }
		society_currency = { value >= 25 scaled_by_influence = yes }
	}
	trigger_else_if = {
		limit = { is_long_lived = yes }
		society_currency = { value >= 20 scaled_by_influence = yes }
	}
	trigger_else_if = {
		limit = { is_long_lived = no }
		society_currency = { value >= 10 scaled_by_influence = yes }
	}
}

has_society_currency_tiny_trigger = {
	trigger_if = {
		limit = { is_immortal = yes }
		society_currency >= 63
	}
	trigger_else_if = {
		limit = { is_long_lived = yes }
		society_currency >= 50
	}
	trigger_else_if = {
		limit = { is_long_lived = no }
		society_currency >= 25
	}
}

has_society_currency_tiny_trigger_scaling = {
	trigger_if = {
		limit = { is_immortal = yes }
		society_currency = { value >= 63 scaled_by_influence = yes }
	}
	trigger_else_if = {
		limit = { is_long_lived = yes }
		society_currency = { value >= 50 scaled_by_influence = yes }
	}
	trigger_else_if = {
		limit = { is_long_lived = no }
		society_currency = { value >= 25 scaled_by_influence = yes }
	}
}

has_society_currency_minor_trigger = {
	trigger_if = {
		limit = { is_immortal = yes }
		society_currency >= 187
	}
	trigger_else_if = {
		limit = { is_long_lived = yes }
		society_currency >= 150
	}
	trigger_else_if = {
		limit = { is_long_lived = no }
		society_currency >= 75
	}
}

has_society_currency_minor_trigger_scaling = {
	trigger_if = {
		limit = { is_immortal = yes }
		society_currency = { value >= 187 scaled_by_influence = yes }
	}
	trigger_else_if = {
		limit = { is_long_lived = yes }
		society_currency = { value >= 150 scaled_by_influence = yes }
	}
	trigger_else_if = {
		limit = { is_long_lived = no }
		society_currency = { value >= 75 scaled_by_influence = yes }
	}
}

has_society_currency_medium_trigger = {
	trigger_if = {
		limit = { is_immortal = yes }
		society_currency >= 375
	}
	trigger_else_if = {
		limit = { is_long_lived = yes }
		society_currency >= 300
	}
	trigger_else_if = {
		limit = { is_long_lived = no }
		society_currency >= 150
	}
}

has_society_currency_medium_trigger_scaling = {
	trigger_if = {
		limit = { is_immortal = yes }
		society_currency = { value >= 375 scaled_by_influence = yes }
	}
	trigger_else_if = {
		limit = { is_long_lived = yes }
		society_currency = { value >= 300 scaled_by_influence = yes }
	}
	trigger_else_if = {
		limit = { is_long_lived = no }
		society_currency = { value >= 150 scaled_by_influence = yes }
	}
}

has_society_currency_major_trigger = {
	trigger_if = {
		limit = { is_immortal = yes }
		society_currency >= 625
	}
	trigger_else_if = {
		limit = { is_long_lived = yes }
		society_currency >= 500
	}
	trigger_else_if = {
		limit = { is_long_lived = no }
		society_currency >= 250
	}
}

has_society_currency_major_trigger_scaling = {
	trigger_if = {
		limit = { is_immortal = yes }
		society_currency = { value >= 625 scaled_by_influence = yes }
	}
	trigger_else_if = {
		limit = { is_long_lived = yes }
		society_currency = { value >= 500 scaled_by_influence = yes }
	}
	trigger_else_if = {
		limit = { is_long_lived = no }
		society_currency = { value >= 250 scaled_by_influence = yes }
	}
}

has_society_currency_large_trigger = {
	trigger_if = {
		limit = { is_immortal = yes }
		society_currency >= 1250
	}
	trigger_else_if = {
		limit = { is_long_lived = yes }
		society_currency >= 1000
	}
	trigger_else_if = {
		limit = { is_long_lived = no }
		society_currency >= 500
	}
}

has_society_currency_large_trigger_scaling = {
	trigger_if = {
		limit = { is_immortal = yes }
		society_currency = { value >= 1250 scaled_by_influence = yes }
	}
	trigger_else_if = {
		limit = { is_long_lived = yes }
		society_currency = { value >= 1000 scaled_by_influence = yes }
	}
	trigger_else_if = {
		limit = { is_long_lived = no }
		society_currency = { value >= 500 scaled_by_influence = yes }
	}
}

has_society_currency_gigantic_trigger = {
	trigger_if = {
		limit = { is_immortal = yes }
		society_currency >= 5000
	}
	trigger_else_if = {
		limit = { is_long_lived = yes }
		society_currency >= 4000
	}
	trigger_else_if = {
		limit = { is_long_lived = no }
		society_currency >= 2000
	}
}

has_society_currency_gigantic_trigger_scaling = {
	trigger_if = {
		limit = { is_immortal = yes }
		society_currency = { value >= 5000 scaled_by_influence = yes }
	}
	trigger_else_if = {
		limit = { is_long_lived = yes }
		society_currency = { value >= 4000 scaled_by_influence = yes }
	}
	trigger_else_if = {
		limit = { is_long_lived = no }
		society_currency = { value >= 2000 scaled_by_influence = yes }
	}
}

is_ill_trigger = {
	OR = {
		has_disease_trigger = yes
	}
}

is_devil_worshiper_trigger = {
}
has_positive_congenital_trigger = {
	OR = {
		trait = strong
		trait = fair
		trait = quick
		trait = genius
		trait = perceptive
		trait = tall
		trait = agile
		trait = melodious_voice
		trait = powerful_voice
		trait = fortitude
		trait = lucky
	}
}
has_positive_voice_trigger = {
	OR = {
		trait = melodious_voice
		trait = powerful_voice
	}
}
has_negative_congenital_trigger = {
	OR = {
		trait = ugly
		trait = clubfooted
		trait = hunchback
		trait = dwarf
		trait = giant
		trait = harelip
		trait = stutter
		trait = lisp
		trait = slow
		trait = inbred
		trait = weak
		trait = imbecile
		trait = wrymouth
		trait = mute
		trait = deaf
		trait = blind
		trait = unlucky
	}
}

is_monastic_member_trigger = {
	OR = {
		society_member_of = mages_guild_tamriel
		society_member_of = mages_guild_akavir
		society_member_of = moth_priests_tamriel
		society_member_of = greybeards_tamriel
	}
}

is_ascetic_trigger = {
	OR = {
		trait = monk
		trait = nun
	}
}

is_virgin_trigger = {
	NOR = {
		any_lover = { always = yes }
		any_child_even_if_dead = { always = yes }
		any_spouse_even_if_dead = { always = yes }
		has_focus = focus_seduction
		is_pregnant = yes
		trait = pregnant
		trait = lustful
		trait = hedonist
		trait = seducer
		trait = seductress
		trait = lovers_pox
		trait = has_aztec_disease
		trait = syphilitic
	}
	OR = {
		NOT = { age = 25 }
		trait = celibate
		trait = chaste
		trait = shy
		is_ascetic_trigger = yes
	}
}

print_scope_trigger = {
	log = "------------------------------"
	log = "- Printing the current scope -"
	log = "- This: [This.GetName][This.GetBestName]"
	log = "- Root: [Root.GetName][Root.GetBestName]"
	log = "- Prev: [Prev.GetName][Prev.GetBestName]"
	log = "- PrevPrev: [PrevPrev.GetName][PrevPrev.GetBestName]"
	log = "- PrevPrevPrev: [PrevPrevPrev.GetName][PrevPrevPrev.GetBestName]"
	log = "- PrevPrevPrevPrev: [PrevPrevPrevPrev.GetName][PrevPrevPrevPrev.GetBestName]"
	log = "- From: [From.GetName][From.GetBestName]"
	log = "- FromFrom: [FromFrom.GetName][FromFrom.GetBestName]"
	log = "- FromFromFrom: [FromFromFrom.GetName][FromFromFrom.GetBestName]"
	log = "- FromFromFromFrom: [FromFromFromFrom.GetName][FromFromFromFrom.GetBestName]"
	log = "- Event_target:test_target1: [test_target1.GetName][test_target1.GetBestName]"
	log = "- Event_target:test_target2: [test_target2.GetName][test_target2.GetBestName]"
	log = "- Event_target:test_target3: [test_target3.GetName][test_target3.GetBestName]"
	log = "------------------------------"
}

is_secret_religious_society_member_trigger = {
	society_member_of = secret_religious_cult
}

# is_christian_secret_religious_society_member_trigger = {
	# society_member_of = secret_religious_cult
	# secret_religion_group = christian
# }

is_openly_of_prevs_secret_religion_trigger = {
	religion = { target = PREV target_type = secret }
}

is_openly_of_roots_secret_religion_trigger = {
	religion = { target = ROOT target_type = secret }
}

has_sympathy_for_true_religion_of_prev_trigger = { 
	OR = {
		AND = {
			trait = sympathy_human_pantheon
			PREV = { true_religion_group_human_pantheon_trigger = yes }
		}
		AND = {
			trait = sympathy_yokudan_pantheon
			PREV = { true_religion_group_yokudan_pantheon_trigger = yes }
		}
		AND = {
			trait = sympathy_mer_pantheon
			PREV = { true_religion_group_mer_pantheon_trigger = yes }
		}
		AND = {
			trait = sympathy_tribunal
			PREV = { true_religion_group_tribunal_trigger = yes }
		}
		AND = {
			trait = sympathy_daedra
			PREV = { true_religion_group_daedra_trigger = yes }
		}
		AND = {
			trait = sympathy_khajiit_pantheon
			PREV = { true_religion_group_khajiit_pantheon_trigger = yes }
		}
		AND = {
			trait = sympathy_hist_group
			PREV = { true_religion_group_hist_group_trigger = yes }
		}
		AND = {
			trait = sympathy_reach_faiths
			PREV = { true_religion_group_reach_faiths_trigger = yes }
		}
		AND = {
			trait = sympathy_old_faith
			PREV = { true_religion_group_old_faith_trigger = yes }
		}
		AND = {
			trait = sympathy_void_religions
			PREV = { true_religion_group_void_religions_trigger = yes }
		}
		AND = {
			trait = sympathy_atmoran_pantheon
			PREV = { true_religion_group_atmoran_pantheon_trigger = yes }
		}
		AND = {
			trait = sympathy_oblivion_religions
			PREV = { true_religion_group_oblivion_religions_trigger = yes }
		}
		AND = {
			trait = sympathy_tsaesci_courts
			PREV = { true_religion_group_tsaesci_courts_trigger = yes }
		}
		AND = {
			trait = sympathy_tangmo_religions
			PREV = { true_religion_group_tangmo_religions_trigger = yes }
		}
		AND = {
			trait = sympathy_potun_religions
			PREV = { true_religion_group_potun_religions_trigger = yes }
		}
		AND = {
			trait = sympathy_kamal_religions
			PREV = { true_religion_group_kamal_religions_trigger = yes }
		}
		AND = {
			trait = sympathy_islander_religions
			PREV = { true_religion_group_islander_religions_trigger = yes }
		}
		AND = {
			trait = sympathy_maormer_religion
			PREV = { true_religion_group_maormer_religion_trigger = yes }
		}
	}
}

has_sympathy_for_true_religion_of_root_trigger = { 
	OR = {
		AND = {
			trait = sympathy_human_pantheon
			ROOT = { true_religion_group_human_pantheon_trigger = yes }
		}
		AND = {
			trait = sympathy_yokudan_pantheon
			ROOT = { true_religion_group_yokudan_pantheon_trigger = yes }
		}
		AND = {
			trait = sympathy_mer_pantheon
			ROOT = { true_religion_group_mer_pantheon_trigger = yes }
		}
		AND = {
			trait = sympathy_tribunal
			ROOT = { true_religion_group_tribunal_trigger = yes }
		}
		AND = {
			trait = sympathy_daedra
			ROOT = { true_religion_group_daedra_trigger = yes }
		}
		AND = {
			trait = sympathy_khajiit_pantheon
			ROOT = { true_religion_group_khajiit_pantheon_trigger = yes }
		}
		AND = {
			trait = sympathy_hist_group
			ROOT = { true_religion_group_hist_group_trigger = yes }
		}
		AND = {
			trait = sympathy_reach_faiths
			ROOT = { true_religion_group_reach_faiths_trigger = yes }
		}
		AND = {
			trait = sympathy_old_faith
			ROOT = { true_religion_group_old_faith_trigger = yes }
		}
		AND = {
			trait = sympathy_void_religions
			ROOT = { true_religion_group_void_religions_trigger = yes }
		}
		AND = {
			trait = sympathy_atmoran_pantheon
			ROOT = { true_religion_group_atmoran_pantheon_trigger = yes }
		}
		AND = {
			trait = sympathy_oblivion_religions
			ROOT = { true_religion_group_oblivion_religions_trigger = yes }
		}
		AND = {
			trait = sympathy_tsaesci_courts
			ROOT = { true_religion_group_tsaesci_courts_trigger = yes }
		}
		AND = {
			trait = sympathy_tangmo_religions
			ROOT = { true_religion_group_tangmo_religions_trigger = yes }
		}
		AND = {
			trait = sympathy_potun_religions
			ROOT = { true_religion_group_potun_religions_trigger = yes }
		}
		AND = {
			trait = sympathy_kamal_religions
			ROOT = { true_religion_group_kamal_religions_trigger = yes }
		}
		AND = {
			trait = sympathy_islander_religions
			ROOT = { true_religion_group_islander_religions_trigger = yes }
		}
		AND = {
			trait = sympathy_maormer_religion
			ROOT = { true_religion_group_maormer_religion_trigger = yes }
		}
	}
}

ok_sr_induction_mission_target_trigger = {
	is_adult = yes
	NOT = { secret_religion = ROOT }
	NOT = { religion = { target_type = secret target = ROOT } }
	prisoner = no
	NOT = { trait = incapable }
	is_inaccessible_trigger = no
	NOT = { has_character_modifier = secret_religion_sympathy_timer }
	OR = {
		religion_group = { target_type = secret target = ROOT }
		has_sympathy_for_true_religion_of_root_trigger = yes
	}
}

ok_sr_sympathy_mission_target_trigger = {
	has_secret_religion_trait_trigger = no
	ROOT = {
		NOT = { secret_religion = { target_type = public target = PREV } }
		NOR = {
			# AND = {
				# true_religion_group = christian
				# PREV = { trait = sympathy_christendom }
			# }
		}
	}
	ROOT = { PREV = { is_openly_of_prevs_secret_religion_trigger = no } }
	ROOT = { PREV = { has_sympathy_for_true_religion_of_prev_trigger = no } }
	prisoner = no
	is_adult = yes
	NOT = { trait = incapable }
	is_inaccessible_trigger = no
	NOT = { has_character_modifier = secret_religion_sympathy_timer }
}

has_prevs_secret_religion_truly_trigger = {
	secret_religion = { target = PREV target_type = true }
}

has_roots_secret_religion_truly_trigger = {
	secret_religion = { target = ROOT target_type = true }
}

has_my_liege_secret_religion_truly_trigger = {
	secret_religion = { target = event_target:my_liege target_type = true }
}

is_in_prevs_interesting_society_trigger = {
	OR = {
		# AND = {
			# society_member_of = secret_religious_society_catholic
			# PREV = { interested_in_society = secret_religious_society_catholic }
		# }
	}
}

shares_prevs_secret_religion_trigger = {
	secret_religion = PREV
}

character_knows_prev_trigger = {
	OR = {
		is_close_relative = PREV
		is_lover = PREV
		is_friend = PREV
		is_rival = PREV
		any_courtier_or_vassal = { character = PREVPREV }
		is_liege_or_above = PREV
		dynasty = PREV
		same_liege = PREV
		AND = {
			is_within_diplo_range = PREV
			PREV = { independent = yes } 
		}
	}
}

shares_true_religion_group_with_prev_trigger = {
	true_religion_group = PREV
}

is_openly_of_prevs_true_religion_group = {
	religion_group = { target = PREV target_type = true }
}

is_visible_to_self_trigger = { #For hidden modifiers
	custom_tooltip = {
		text =  is_visible_to_self_trigger_tooltip
		character = FROM
	}
}

has_any_char_old_religion = {
	OR = {
		# AND = {
			# has_character_flag = character_was_catholic
	    	# any_character = {
	    		# religion = catholic
	    	# }
	    # }
	}
}

can_add_admin_bonus_trigger = {
	NAND = {
		has_province_modifier = harvest_festivals
		has_province_modifier = inspired_peasantry
		has_province_modifier = new_roads
	}
}

can_be_sabotaged_trigger = {
	NAND = {
		has_province_modifier = sabotaged_buildings
		has_province_modifier = sabotaged_defences
		has_province_modifier = sabotaged_unrest
	}
}

has_assassins_prerequisites = {
	ai = yes
	age = 16
	is_incapable = no
	prisoner = no
}

has_common_devilworship_prerequisites = {
	ai = yes
	age = 16
	is_incapable = no
	prisoner = no
}

same_society_rank_as_prev_trigger = {
	OR = {
		AND = {
			society_rank == 1
			PREV = { society_rank == 1 }
		}
		AND = {
			society_rank == 2
			PREV = { society_rank == 2 }
		}
		AND = {
			society_rank == 3
			PREV = { society_rank == 3 }
		}
		AND = {
			society_rank == 4
			PREV = { society_rank == 4 }
		}
	}
}

higher_society_rank_than_prev_trigger = {
	OR = {
		AND = {
			PREV = { society_rank == 1 }
			society_rank > 1
		}
		AND = {
			PREV = { society_rank == 2 }
			society_rank > 2
		}
		AND = {
			PREV = { society_rank == 3 }
			society_rank > 3
		}
	}
}

#returns true if scoped character already likes ROOT and could be physically attracted to them
possibly_romantically_interested_in_ROOT_trigger = {
	NOT = { is_rival = ROOT }
	NOT = { is_lover = ROOT }
	attacted_to_root_trigger = yes
	OR = {
		opinion = { who = ROOT value = 45 }
		has_opinion_modifier = { who = ROOT modifier = opinion_budding_romance }
	}
}

#returns true if scoped character is already liked by ROOT and ROOT could be physically attracted to them
ROOT_possibly_romantically_interested_trigger = {
	NOT = { is_rival = ROOT }
	NOT = { is_lover = ROOT }
	root_attraction_trigger = yes
	OR = { 
		reverse_opinion = { who = ROOT value = 45 }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_budding_romance }
	}
}

#returns true if scoped character and ROOT are somewhat likely to fancy each other
possibly_romantically_interested_in_each_other_trigger = {
	possibly_romantically_interested_in_ROOT_trigger = yes
	ROOT_possibly_romantically_interested_trigger = yes
}

looting_artifact_event_religious_artifacts_trigger = {
	FROM = {
		any_artifact = {
			has_artifact_flag = looted_artifact_tooltip_1
			has_artifact_flag = religious
		}
	}
}

can_be_asked_to_leave_court_trigger = {
	NOR = {
		is_ruler = yes
		is_landed = yes
		has_job_title = yes
		has_minor_title = title_regent
		has_minor_title = title_appointed_regent
		has_minor_title = title_commander
		has_minor_title = title_court_physician
		dynasty = FROM
		is_married = FROM
		is_consort = FROM
		is_adult = no
		is_close_relative = FROM
		has_character_flag = eternal_life_mystic
		has_character_flag = immortal_rival
		has_character_flag = flag_special_event_character
		has_character_modifier = in_seclusion
	}
}

has_a_seer_modifier_trigger = {
	OR = {
		has_character_modifier = fulfilled_vision_great
		has_character_modifier = fulfilled_vision_ok
		has_character_modifier = fulfilled_vision_bad
		has_character_modifier = fulfilled_vision_worst
	}
}

has_an_omen_modifier_trigger = {
	OR = {
		has_character_modifier = good_battle_omen
		has_character_modifier = good_relationship_omen
		has_character_modifier = good_power_omen
		has_character_modifier = bad_battle_omen
		has_character_modifier = bad_relationship_omen
		has_character_modifier = bad_power_omen
	}
}

has_positive_omen_modifier_trigger = {
	OR = {
		has_character_modifier = good_battle_omen
		has_character_modifier = good_relationship_omen
		has_character_modifier = good_power_omen
	}
}

has_negative_omen_modifier_trigger = {
	OR = {
		has_character_modifier = bad_battle_omen
		has_character_modifier = bad_relationship_omen
		has_character_modifier = bad_power_omen
	}
}

has_battle_omen_modifier_trigger = {
	OR = {
		has_character_modifier = good_battle_omen
		has_character_modifier = bad_battle_omen
	}
}

has_relationship_omen_modifier_trigger = {
	OR = {
		has_character_modifier = good_relationship_omen
		has_character_modifier = bad_relationship_omen
	}
}

has_power_omen_modifier_trigger = {
	OR = {
		has_character_modifier = good_power_omen
		has_character_modifier = bad_power_omen
	}
}

has_childhood_horoscope_modifier_trigger = {
	OR = {
		has_character_modifier = guided_by_horoscope_diplomacy
		has_character_modifier = guided_by_horoscope_martial
		has_character_modifier = guided_by_horoscope_stewardship
		has_character_modifier = guided_by_horoscope_intrigue
		has_character_modifier = guided_by_horoscope_learning
	}
}

is_born_in_january_trigger = {
	month_of_birth = 1
	NOT = { month_of_birth = 2 }
}
is_born_in_february_trigger = {
	month_of_birth = 2
	NOT = { month_of_birth = 3 }
}
is_born_in_march_trigger = {
	month_of_birth = 3
	NOT = { month_of_birth = 4 }
}
is_born_in_april_trigger = {
	month_of_birth = 4
	NOT = { month_of_birth = 5 }
}
is_born_in_may_trigger = {
	month_of_birth = 5
	NOT = { month_of_birth = 6 }
}
is_born_in_june_trigger = {
	month_of_birth = 6
	NOT = { month_of_birth = 7 }
}
is_born_in_july_trigger = {
	month_of_birth = 7
	NOT = { month_of_birth = 8 }
}
is_born_in_august_trigger = {
	month_of_birth = 8
	NOT = { month_of_birth = 9 }	
}
is_born_in_september_trigger = {
	month_of_birth = 9
	NOT = { month_of_birth = 10 }	
}
is_born_in_october_trigger = {
	month_of_birth = 10
	NOT = { month_of_birth = 11 }	
}
is_born_in_november_trigger = {
	month_of_birth = 11
	NOT = { month_of_birth = 12 }	
}
is_born_in_december_trigger = {
	month_of_birth = 12
}

is_born_under_Aries_trigger = {
	OR = {
		AND = {
			is_born_in_march_trigger = yes
			day_of_birth = 20 #including this
		}
		AND = {
			is_born_in_april_trigger = yes
			NOT = { day_of_birth = 19 } #not 19th, so 18th at the latest
		}
	}
}
is_born_under_Taurus_trigger = {
	OR = {
		AND = {
			is_born_in_april_trigger = yes
			day_of_birth = 19
		}
		AND = {
			is_born_in_may_trigger = yes
			NOT = { day_of_birth = 20 }
		}
	}
}
is_born_under_Gemini_trigger = {
	OR = {
		AND = {
			is_born_in_may_trigger = yes
			day_of_birth = 20
		}
		AND = {
			is_born_in_june_trigger = yes
			NOT = { day_of_birth = 21 }
		}
	}
}
is_born_under_Cancer_trigger = {
	OR = {
		AND = {
			is_born_in_june_trigger = yes
			day_of_birth = 21
		}
		AND = {
			is_born_in_july_trigger = yes
			NOT = { day_of_birth = 22 }
		}
	}
}
is_born_under_Leo_trigger = {
	OR = {
		AND = {
			is_born_in_july_trigger = yes
			day_of_birth = 22
		}
		AND = {
			is_born_in_august_trigger = yes
			NOT = { day_of_birth = 22 }
		}
	}
}
is_born_under_Virgo_trigger = {
	OR = {
		AND = {
			is_born_in_august_trigger = yes
			day_of_birth = 22
		}
		AND = {
			is_born_in_september_trigger = yes
			NOT = { day_of_birth = 22 }
		}
	}
}
is_born_under_Libra_trigger = {
	OR = {
		AND = {
			is_born_in_september_trigger = yes
			day_of_birth = 22
		}
		AND = {
			is_born_in_october_trigger = yes
			NOT = { day_of_birth = 23 }
		}
	}
}
is_born_under_Scorpius_trigger = {
	OR = {
		AND = {
			is_born_in_october_trigger = yes
			day_of_birth = 23
		}
		AND = {
			is_born_in_november_trigger = yes
			NOT = { day_of_birth = 22 }
		}
	}
}
is_born_under_Sagittarius_trigger = {
	OR = {
		AND = {
			is_born_in_november_trigger = yes
			day_of_birth = 22
		}
		AND = {
			is_born_in_december_trigger = yes
			NOT = { day_of_birth = 21 }
		}
	}
}
is_born_under_Capricorn_trigger = {
	OR = {
		AND = {
			is_born_in_december_trigger = yes
			day_of_birth = 21
		}
		AND = {
			is_born_in_january_trigger = yes
			NOT = { day_of_birth = 20 }
		}
	}
}
is_born_under_Aquarius_trigger = {
	OR = {
		AND = {
			is_born_in_january_trigger = yes
			day_of_birth = 19
		}
		AND = {
			is_born_in_february_trigger = yes
			NOT = { day_of_birth = 18 }
		}
	}
}
is_born_under_Pisces_trigger = {
	OR = {
		AND = {
			is_born_in_february_trigger = yes
			day_of_birth = 18
		}
		AND = {
			is_born_in_march_trigger = yes
			NOT = { day_of_birth = 20 }
		}
	}
}

is_romantic_zodiac_match_with_root_trigger = {
	OR = {
		AND = {
			is_born_under_Aries_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Gemini_trigger = yes
					is_born_under_Leo_trigger = yes
					is_born_under_Sagittarius_trigger = yes
					is_born_under_Aquarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Taurus_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Cancer_trigger = yes
					is_born_under_Virgo_trigger = yes
					is_born_under_Capricorn_trigger = yes
					is_born_under_Pisces_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Gemini_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Aries_trigger = yes
					is_born_under_Leo_trigger = yes
					is_born_under_Libra_trigger = yes
					is_born_under_Aquarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Cancer_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Taurus_trigger = yes
					is_born_under_Virgo_trigger = yes
					is_born_under_Scorpius_trigger = yes
					is_born_under_Pisces_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Leo_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Aries_trigger = yes
					is_born_under_Gemini_trigger = yes
					is_born_under_Libra_trigger = yes
					is_born_under_Sagittarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Virgo_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Taurus_trigger = yes
					is_born_under_Cancer_trigger = yes
					is_born_under_Scorpius_trigger = yes
					is_born_under_Capricorn_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Libra_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Gemini_trigger = yes
					is_born_under_Leo_trigger = yes
					is_born_under_Sagittarius_trigger = yes
					is_born_under_Aquarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Scorpius_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Cancer_trigger = yes
					is_born_under_Virgo_trigger = yes
					is_born_under_Capricorn_trigger = yes
					is_born_under_Pisces_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Sagittarius_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Aries_trigger = yes
					is_born_under_Leo_trigger = yes
					is_born_under_Libra_trigger = yes
					is_born_under_Aquarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Capricorn_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Taurus_trigger = yes
					is_born_under_Virgo_trigger = yes
					is_born_under_Scorpius_trigger = yes
					is_born_under_Pisces_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Aquarius_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Aries_trigger = yes
					is_born_under_Gemini_trigger = yes
					is_born_under_Libra_trigger = yes
					is_born_under_Sagittarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Pisces_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Taurus_trigger = yes
					is_born_under_Cancer_trigger = yes
					is_born_under_Scorpius_trigger = yes
					is_born_under_Capricorn_trigger = yes
				}
			}
		}
	}
}

is_romantic_zodiac_mismatch_with_root = {
	OR = {
		AND = {
			is_born_under_Aries_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Cancer_trigger = yes
					is_born_under_Capricorn_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Taurus_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Leo_trigger = yes
					is_born_under_Aquarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Gemini_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Virgo_trigger = yes
					is_born_under_Pisces_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Cancer_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Aries_trigger = yes
					is_born_under_Libra_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Leo_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Taurus_trigger = yes
					is_born_under_Scorpius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Virgo_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Gemini_trigger = yes
					is_born_under_Sagittarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Libra_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Cancer_trigger = yes
					is_born_under_Capricorn_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Scorpius_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Leo_trigger = yes
					is_born_under_Aquarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Sagittarius_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Virgo_trigger = yes
					is_born_under_Pisces_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Capricorn_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Aries_trigger = yes
					is_born_under_Libra_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Aquarius_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Taurus_trigger = yes
					is_born_under_Scorpius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Pisces_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Gemini_trigger = yes
					is_born_under_Sagittarius_trigger = yes
				}
			}
		}
	}
}

has_unsafe_secret_religion = {
	NOT = { is_nomadic = yes }
	OR = {
	}
}

same_true_religion_as_from_trigger = {
	true_religion = FROM
}
same_true_religion_as_root_trigger = {
	true_religion = ROOT
}
# JADE DRAGON
# EMPEROR LIKES & DISLIKES
likes_concubines = {
	context = concubine # Not a trigger, but used by the 'liked_by_offmap' & 'disliked_by_offmap' triggers
}
likes_eunuchs = {
	context = eunuch # Not a trigger, but used by the 'liked_by_offmap' & 'disliked_by_offmap' triggers
	trait = eunuch
}
likes_wealth = {
	context = wealth # Not a trigger, but used by the 'liked_by_offmap' & 'disliked_by_offmap' triggers
}
likes_tributaries = {
	context = tributary # Not a trigger, but used by the 'liked_by_offmap' & 'disliked_by_offmap' triggers
}
is_blood_relative_of_root_trigger = {
	OR = {
		is_ancestor_of = ROOT
		is_descendant_of = ROOT
		sibling = ROOT
		is_cousin_of = ROOT
		is_aunt_uncle_of = ROOT
		is_nibling_of = ROOT
		dynasty = ROOT
	}
}

silk_road_trade_post_trigger = {
}

is_any_kinslayer_trigger = {
	OR = {
		trait = kinslayer
		trait = familial_kinslayer
		trait = dynastic_kinslayer
	}
}

is_in_monastic_society = {
	OR = {
		society_member_of = moth_priests_tamriel
		society_member_of = greybeards_tamriel
	}
}
has_unsafe_religion = {
	NOT = { is_nomadic = yes }
}

courtier_from_china_trigger = {
	custom_tooltip = {
		text = courtier_from_china_trigger_tt
		has_character_flag = originated_from_chinese_court
	}
}

using_unimportant_cb = {
	OR = {
		using_cb = peasant_revolt
		using_cb = heretic_revolt
		using_cb = religious_revolt
		using_cb = liberation_revolt
	}
}

death_in_china_trigger = {
	OR = {
		death_reason = death_went_to_china
		death_reason = death_offmap
		death_reason = death_went_back_to_china
		death_reason = death_in_china_historic
	}
}

death_no_trace_trigger = {
	OR = {
		death_reason = death_missing
		death_reason = death_vanished
		death_reason = death_sold_in_slavery
		death_reason = death_retirement
		death_reason = death_shivering_isles
		death_reason = death_clavicus_claims_you
		death_reason = death_vanish_dungeon
		death_reason = death_vanish_wilderness
	}
}

proselytize_convert_independent_trigger = {
	owner = {
		independent = yes
		NOT = { religion = FROM }
		is_reformed_religion = no
		capital_scope = {
			province = ROOT
		}
		controls_religion = no
		FROM = {
			higher_tier_than = COUNT
			OR = {
				independent = yes
				higher_tier_than = DUKE
			}
		}
		NOT = {
			has_opinion_modifier = { who = FROM modifier = opinion_sent_preacher }
		}
		is_within_diplo_range = FROM
	}
}

is_toddler_age_trigger = {
	age = 0
 	NOT = { age = 4 }
}

is_young_child_age_trigger = {
	age = 4
 	NOT = { age = 9 }
}

is_child_age_trigger = {
	age = 9
 	NOT = { age = 12 }
}

is_adolescent_age_trigger = {
	age = 12
 	NOT = { age = 17 }
}

is_teenager_age_trigger = {
	age = 13
 	NOT = { age = 20 }
}

is_grown_up_age_trigger = {
	is_adult_ni = yes
}

is_middle_aged_trigger = {
	is_aging_ni = yes
}

is_senior_age_trigger = {
	is_old_ni = yes
}

is_elder_age_trigger = {
	is_very_old_ni = yes
}

# Hardcoded trigger for the Execute Imprisoned interaction. Used for the description warning you of kinslaying
# Root - The executioner
# event_target:kinslayer_target - The person being executed
will_add_kinslayer = {
	OR = {
		AND = {
			NOT = { trait = kinslayer }
			OR = {
				is_ancestor_of = event_target:kinslayer_target
				is_descendant_of = event_target:kinslayer_target
				sibling = event_target:kinslayer_target
			}
		}
		AND = {
			NOR = { 
				trait = kinslayer
				trait = familial_kinslayer
			}
			OR = {
				is_cousin_of = event_target:kinslayer_target
				is_aunt_uncle_of = event_target:kinslayer_target
				is_nibling_of = event_target:kinslayer_target
			}
		}
		AND = {
			NOR = { 
				trait = kinslayer
				trait = familial_kinslayer
				trait = dynastic_kinslayer
			}
			is_lowborn = no
			dynasty = event_target:kinslayer_target
		}
	}
}

# Hardcoded trigger for the Assassinate interaction. Used for triggering whether it can be used at all
# Root - The person being assassinated
# From - The person doing the assassination
assassination_interaction_trigger = {
	conditional_tooltip = {
		trigger = {
			multiplayer = yes
		}
		custom_tooltip = {
			text = MP_GAME_RULE_ALLOWED
			OR = {
				ai = yes
				NOT = {
					has_game_rule = {
						name = multiplayer_assassinations
						value = no_players
					}
				}
			}
			OR = {
				NOT = {
					has_game_rule = {
						name = multiplayer_assassinations
						value = no_players_or_relatives
					}
				}
				AND = {
					ai = yes
					NOT = {
						any_close_relative = {
							ai = no
							NOT = { character = FROM }
						}
					}
					NOT = {
						any_spouse = {
							ai = no
							NOT = { character = FROM }
						}
					}
					NOT = {
						liege = {
							ai = no
							dynasty = ROOT
							NOT = { character = FROM }
						}
						is_heir = yes
					}
				}
			}
		}
	}
}

#checks whether ROOT has one of the following opinion modifiers against the currently scoped character
root_has_terrible_opinion_modifier_of_this_trigger = {
	OR = {
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_hate }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_imprisoned }
	}
}

#checks whether the current scope has one of the following opinion modifiers against ROOT
this_has_terrible_opinion_modifier_of_root_trigger = {
	OR = {
		has_opinion_modifier = { who = ROOT modifier = opinion_hate }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_imprisoned }
	}
}

#for MNM.9000 chain
the_hunt_for_an_artifact_has_made_enough_progress_trigger = {
	OR = {
		AND = {
			event_target:relic_ruler = { check_variable = { which = relic_score value = 8 } } #15 } } old value
			event_target:relic_ruler = { has_character_modifier = relic_rumor_minor } 
		}
		AND = {
			event_target:relic_ruler = { check_variable = { which = relic_score value = 14 } } #25 } } old value
			event_target:relic_ruler = { has_character_modifier = relic_rumor_medium } 
		}
		AND = {
			event_target:relic_ruler = { check_variable = { which = relic_score value = 20 } } #40 } } old value
			event_target:relic_ruler = { has_character_modifier = relic_rumor_major } 
		}
	}
}

has_tribal_or_nomadic_government_trigger = {
	custom_tooltip = {
		text = tribal_or_nomadic_government_tt
		hidden_trigger = {
			OR = {
				government = tribal_government
				government = nomadic_government
			}
		}
	}
}


has_minor_title_relating_to_martial_trigger = { #WIP - feel free to add to this
	OR = {
		has_minor_title = title_master_of_the_horse
		has_minor_title = title_cupbearer
		has_minor_title = title_commander
	}
}


#returns true if scoped character already dislikes ROOT (while not being caught up in a friendship or love, and such)
potentially_interested_in_rivaling_root_trigger = { #must be a character
	NOT = { is_rival = ROOT }
	NOT = { is_lover = ROOT }
	NOT = { is_friend = ROOT }
	NOT = { opinion = { who = ROOT value = 5 } }
	OR = {
		ROOT = { is_foe = PREV } #checks if the current scope has committed a crime against ROOT (I hope)
		is_foe = ROOT  #checks if root has committed a crime against the current scope
		NOT = { opinion = { who = ROOT value = -25 } }
		this_has_terrible_opinion_modifier_of_root_trigger = yes
		#Fill up with fun opinion modifiers, whenever you think of them...! Ideas: opinion_spurned, opinion_revoked_my_title, etc
	}
}
#returns true if scoped character is already disliked by ROOT (while not being caught up in a friendship or love, and such)
root_potentially_interested_in_rivaling_this_trigger = { #must be a character
	NOT = { is_rival = ROOT }
	NOT = { is_lover = ROOT }
	NOT = { is_friend = ROOT }
	NOT = { reverse_opinion = { who = ROOT value = 5 } }
	OR = {
		ROOT = { is_foe = PREV } #checks if the current scope has committed a crime against ROOT (I hope)
		is_foe = ROOT  #checks if root has committed a crime against the current scope
		NOT = { reverse_opinion = { who = ROOT value = -25 } }
		root_has_terrible_opinion_modifier_of_this_trigger = yes
		#Fill up with fun opinion modifiers, whenever you think of them...! Ideas: opinion_spurned, opinion_revoked_my_title, etc
	}
}

#returns true if scoped character and ROOT are both sort of interested in a rivalry
#(they both dislike one another and are not friends, lovers, or rivals already)
current_scope_and_root_make_sense_as_rivals_trigger = {
	potentially_interested_in_rivaling_root_trigger = yes
	root_potentially_interested_in_rivaling_this_trigger = yes
}

#checks whether PREV has one of the following opinion modifiers against the currently scoped character
prev_has_friendly_opinion_modifier_of_this_trigger = {
	OR = {
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_budding_friendship }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_was_praised }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_charmed }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_honorable }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_was_rewarded }
		reverse_has_opinion_modifier = { who = PREV modifier = nice_adventure }
		reverse_has_opinion_modifier = { who = PREV modifier = great_adventure }
		reverse_has_opinion_modifier = { who = PREV modifier = epic_adventure }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_accomplice }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_mediator }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_poet_pen_pal }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_calmed }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_cheered_up }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_teach_virtue }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_no_cat }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_feels_appreciated }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_amused }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_swayed_3 }
	}
}

#checks whether the current scope has one of the following opinion modifiers against ROOT
this_has_friendly_opinion_modifier_of_root_trigger = {
	OR = {
		has_opinion_modifier = { who = ROOT modifier = opinion_budding_friendship }
		has_opinion_modifier = { who = ROOT modifier = opinion_was_praised }
		has_opinion_modifier = { who = ROOT modifier = opinion_charmed }
		has_opinion_modifier = { who = ROOT modifier = opinion_honorable }
		has_opinion_modifier = { who = ROOT modifier = opinion_was_rewarded }
		has_opinion_modifier = { who = ROOT modifier = nice_adventure }
		has_opinion_modifier = { who = ROOT modifier = great_adventure }
		has_opinion_modifier = { who = ROOT modifier = epic_adventure }
		has_opinion_modifier = { who = ROOT modifier = opinion_accomplice }
		has_opinion_modifier = { who = ROOT modifier = opinion_mediator }
		has_opinion_modifier = { who = ROOT modifier = opinion_poet_pen_pal }
		has_opinion_modifier = { who = ROOT modifier = opinion_calmed }
		has_opinion_modifier = { who = ROOT modifier = opinion_cheered_up }
		has_opinion_modifier = { who = ROOT modifier = opinion_teach_virtue }
		has_opinion_modifier = { who = ROOT modifier = opinion_no_cat }
		has_opinion_modifier = { who = ROOT modifier = opinion_feels_appreciated }
		has_opinion_modifier = { who = ROOT modifier = opinion_amused }
		has_opinion_modifier = { who = ROOT modifier = opinion_swayed_3 }
	}
}

#checks whether ROOT has one of the following opinion modifiers against the currently scoped character
root_has_friendly_opinion_modifier_of_this_trigger = {
	OR = {
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_budding_friendship }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_was_praised }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_charmed }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_honorable }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_was_rewarded }
		reverse_has_opinion_modifier = { who = ROOT modifier = nice_adventure }
		reverse_has_opinion_modifier = { who = ROOT modifier = great_adventure }
		reverse_has_opinion_modifier = { who = ROOT modifier = epic_adventure }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_accomplice }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_mediator }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_poet_pen_pal }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_calmed }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_cheered_up }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_teach_virtue }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_no_cat }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_feels_appreciated }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_amused }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_swayed_3 }
	}
}
#returns true if scoped character already likes ROOT
potentially_platonically_interested_in_root_trigger = {
	NOT = { is_rival = ROOT }
	NOT = { is_friend = ROOT }
	opinion = { who = ROOT value = 10 }
	this_has_terrible_opinion_modifier_of_root_trigger = no

	OR = {
		opinion = { who = ROOT value = 45 }
		this_has_friendly_opinion_modifier_of_root_trigger = yes
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_budding_friendship } #Or if ROOT has this opinion of current scope
	}
}

#returns true if scoped character is already liked by ROOT
root_potentially_platonically_interested_in_this_trigger = {
	NOT = { is_rival = ROOT }
	NOT = { is_friend = ROOT }
	root_has_terrible_opinion_modifier_of_this_trigger = no

	OR = { 
		reverse_opinion = { who = ROOT value = 45 }
		root_has_friendly_opinion_modifier_of_this_trigger = yes
		has_opinion_modifier = { who = ROOT modifier = opinion_budding_friendship } #Or if current scope has this opinion of current ROOT
	}
}

#returns true if scoped character and ROOT are both sort of interested in a rivalry
#(they both dislike one another and are not friends, lovers, or rivals already)
current_scope_and_root_make_sense_as_friendlies_trigger = {
	potentially_platonically_interested_in_root_trigger = yes
	root_potentially_platonically_interested_in_this_trigger = yes
}

# Hardcoded trigger for Pagan baptism. Only used (except where referenced in script) for the Pagan baptism tooltip in the religion window
pagan_baptism_trigger = {
	always = no
	NOT = { trait = incapable }
	has_regent = no
	war = no
	prisoner = no
	prestige = 500
	conditional_tooltip = {
		trigger = { has_character_flag = ai_flag_refuse_conversion }
		custom_tooltip = {
			text = NOT_TRUE_BELIEVER
			hidden_tooltip = {
				NOT = { has_character_flag = ai_flag_refuse_conversion }
			}
		}
	}
	conditional_tooltip = {
		trigger = { has_character_modifier = baptism_request_cooldown }
		custom_tooltip = {
			text = NOT_ASKED_BAPTISM_RECENTLY
			hidden_tooltip = {  
				NOT = { has_character_modifier = baptism_request_cooldown } 
			} 
		} 
	} 
	custom_tooltip = {
		text = TT_UNREFORMED_PAGAN
		hidden_tooltip = {
			# religion_group = pagan_group
			# NOT = { is_reformed_religion = yes }
			# #NOT = { religion = bon }
		}
	}
	primary_title = { 
		OR = { 
			has_law = tribal_organization_2 
			has_law = tribal_organization_3 
			has_law = tribal_organization_4 
		} 
	}
}

has_fat_for_flag_trigger = { 
	OR = {
		has_character_flag = flag_fat_for_gluttony 
		has_character_flag = flag_fat_for_stress
		has_character_flag = flag_fat_for_depression
		has_character_flag = flag_fat_for_sloth
		has_character_flag = flag_fat_for_hedonism
		has_character_flag = flag_fat_for_carousing
		has_character_flag = flag_fat_for_family 
		has_character_flag = flag_fat_for_content 
		has_character_flag = flag_fat_for_lust
		has_character_flag = flag_fat_for_wroth
		has_character_flag = flag_fat_for_drunkard
		has_character_flag = flag_fat_for_boredom #fallback reason
	}
}

has_malnourished_for_flag_trigger = { 
	OR = {
		has_character_flag = flag_malnourished_for_temperance 
		has_character_flag = flag_malnourished_for_stress
		has_character_flag = flag_malnourished_for_depression
		has_character_flag = flag_malnourished_for_sloth
		has_character_flag = flag_malnourished_for_study
		has_character_flag = flag_malnourished_for_faith
		has_character_flag = flag_malnourished_for_paranoia 
		has_character_flag = flag_malnourished_for_diligence
		has_character_flag = flag_malnourished_for_cannibal
		has_character_flag = flag_malnourished_for_craven
		has_character_flag = flag_malnourished_for_boredom #fallback reason
	}
}

is_child_or_sibling_of_from_trigger = {
	custom_tooltip = {
		text = is_child_or_sibling_of_yours_tt
		OR = {
			is_child_of = FROM
			sibling = FROM
		}
	}
}

should_evolve_cultures_trigger = {
	hidden_tooltip = {
		OR = {
			is_alternate_start = no
			has_alternate_start_parameter = {
				key = culture_names
				value = historical
			}
		}
	}
}

non_historical_culture_names_in_alt_start_trigger = {
	hidden_tooltip = {
		AND = {
			is_alternate_start = yes
			NOT = {
				has_alternate_start_parameter = {
					key = culture_names
					value = historical
				}
			}
		}
	}
}

religions_are_standard_trigger = {
	hidden_tooltip = {
		OR = {
			is_alternate_start = no
			has_alternate_start_parameter = {
				key = religion_names
				value = historical
			}
		}
	}
}

this_has_terrible_opinion_modifier_of_root_extended_trigger = {
	OR = {
		#Personal grievances.

		has_opinion_modifier = { who = ROOT modifier = opinion_hate }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_imprisoned }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder }

		#Family grievances
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_executed_child }

		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_spouse }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_child }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_parent }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_sibling }
	}
}
root_has_terrible_opinion_modifier_of_this_extended_trigger = {
	OR = {
		#Personal grievances.

		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_hate }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_imprisoned }
		reverse_has_opinion_modifier = { who = ROOT modifier = attempted_murder }

		#Family grievances
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_tortured_family }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_tortured_close_kin }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_family }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_close_kin }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_executed_child }

		reverse_has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_spouse }
		reverse_has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_child }
		reverse_has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_parent }
		reverse_has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_sibling }
	}
}
prev_has_terrible_opinion_modifier_of_this_extended_trigger = {
	OR = {
		#Personal grievances.

		reverse_has_opinion_modifier = { who = PREV modifier = opinion_hate }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_tortured_me }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_mutilated_me }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_imprisoned }
		reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder }

		#Family grievances
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_tortured_family }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_tortured_close_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_mutilated_family }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_mutilated_close_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_executed_child }

		reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_spouse }
		reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_child }
		reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_parent }
		reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_sibling }
	}
}

# Hardcoded trigger for Coronation alert. Only used (except where referenced in script) for that alert, on top of the "potential" for the coronation decision. If it does not exist, only the decision potential is used
needs_coronation_trigger = {
	age >= 16
}

ruler_has_dedicated_temple_trigger = {
}

martyrs_death_trigger = {
	OR = {
		death_reason = death_sacrificed
  		death_reason = death_sacrificed_norse
  		death_reason = death_sacrificed_ancestors
  		death_reason = death_execution_aztec_sacrifice
  		
	}
}
can_build_hillfort_trigger = {
						OR = { 
							AND = { 
										NOR = { 
											is_building = tb_hillfort_0 
											has_building = tb_hillfort_0 
										}
										location = { TECH_CASTLE_CONSTRUCTION = 0 }
							}
							AND = { 
										has_building = tb_hillfort_0
										NOR = { 
											is_building = tb_hillfort_1 
											has_building = tb_hillfort_1 
										}
										location = { TECH_CASTLE_CONSTRUCTION = 0 }
							}
							AND = { 
										has_building = tb_hillfort_1
										NOR = { 
											is_building = tb_hillfort_2
											has_building = tb_hillfort_2
										}
										location = { TECH_CASTLE_CONSTRUCTION = 1 }
							}
							AND = { 
										has_building = tb_hillfort_2
										NOR = { 
												is_building = tb_hillfort_3
												has_building = tb_hillfort_3 
											}
										location = { TECH_CASTLE_CONSTRUCTION = 2 }
							}
						}
}
can_build_defensive_fortifications_trigger = {
						holding_type = tribal
						# hidden_tooltip = { 
							# NOR = { 
								# is_building = tb_defensive_fortifications_4
								# has_building = tb_defensive_fortifications_4
							# }
						# }
						# OR = { 
							# AND = { 
								# custom_tooltip = { 
									# text = tooltip_can_build_tb_defensive_fortifications_1
									# hidden_tooltip = { 
										# NOR = { 
											# is_building = tb_defensive_fortifications_1 
											# has_building = tb_defensive_fortifications_1
										# }
										# location = { TECH_CASTLE_CONSTRUCTION = 0 }
									# }
								# }
							# }
							# AND = { 
								# custom_tooltip = { 
									# text = tooltip_can_build_tb_defensive_fortifications_2 
									# hidden_tooltip = { 
										# has_building = tb_defensive_fortifications_1
										# NOR = { 
											# is_building = tb_defensive_fortifications_2 
											# has_building = tb_defensive_fortifications_2 
										# }
										# location = { TECH_CASTLE_CONSTRUCTION = 0 }
									# }
								# }
							# }
							# AND = { 
								# custom_tooltip = { 
									# text = tooltip_can_build_tb_defensive_fortifications_3
									# hidden_tooltip = { 
										# has_building = tb_defensive_fortifications_2
										# NOR = { 
											# is_building = tb_defensive_fortifications_3 
											# has_building = tb_defensive_fortifications_3 
										# }
										# location = { TECH_CASTLE_CONSTRUCTION = 1 }
									# }
								# }
							# }
							# AND = { 
								# custom_tooltip = { 
									# text = tooltip_can_build_tb_defensive_fortifications_4
									# hidden_tooltip = { 
										# has_building = tb_defensive_fortifications_3
										# NOR = { 
											# is_building = tb_defensive_fortifications_4 
											# has_building = tb_defensive_fortifications_4 
										# }
										# location = { TECH_CASTLE_CONSTRUCTION = 1 }
									# }
								# }
							# }
						# }
}
can_build_walls_trigger = {
						holding_type = castle
						hidden_tooltip = { NOT = { has_building = ca_walls_6 } }
						OR = { 
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_ca_walls_1
									hidden_tooltip = { 
										NOR = { 
											is_building = ca_walls_1 
											has_building = ca_walls_1
										}
										location = { TECH_FORTIFICATIONS_CONSTRUCTION = 0 }
									}
								}
							}
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_ca_walls_2
									hidden_tooltip = { 
										has_building = ca_walls_1
										NOR = { 
											is_building = ca_walls_2
											has_building = ca_walls_2
										}
										location = { TECH_FORTIFICATIONS_CONSTRUCTION = 0 }
									}
								}
							}
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_ca_walls_3
									hidden_tooltip = { 
										has_building = ca_walls_2
										NOR = { 
											is_building = ca_walls_3
											has_building = ca_walls_3
										}
										location = { TECH_FORTIFICATIONS_CONSTRUCTION = 1 }
									}
								}
							}
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_ca_walls_4
									hidden_tooltip = { 
										has_building = ca_walls_3
										NOR = { 
											is_building = ca_walls_4
											has_building = ca_walls_4
										}
										location = { TECH_FORTIFICATIONS_CONSTRUCTION = 2 }
									}
								}
							}
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_ca_walls_5
									hidden_tooltip = { 
										has_building = ca_walls_4
										NOR = { 
											is_building = ca_walls_5 
											has_building = ca_walls_5
										}
										location = { TECH_FORTIFICATIONS_CONSTRUCTION = 3 }
									}
								}
							}
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_ca_walls_6
									hidden_tooltip = { 
										has_building = ca_walls_5
										NOR = { 
											is_building = ca_walls_6 
											has_building = ca_walls_6
										}
										location = { TECH_FORTIFICATIONS_CONSTRUCTION = 4 TECH_RELIGIOUS_CUSTOMS = 4 }
									}
								}
							}
						}
}
can_build_castle_fortifications_trigger = {
						holding_type = castle
						# hidden_tooltip = { 
							# NOR = { 
								# is_building = ca_wall_q_5
								# has_building = ca_wall_q_5
							# }
						# }
						# OR = { 
							# AND = { 
								# custom_tooltip = { 
									# text = tooltip_can_build_ca_wall_q_1
									# hidden_tooltip = { 
										# NOR = { 
											# is_building = ca_wall_q_1
											# has_building = ca_wall_q_1
										# }
										# location = { TECH_FORTIFICATIONS_CONSTRUCTION = 0 }
									# }
								# }
							# }
							# AND = { 
								# custom_tooltip = { 
									# text = tooltip_can_build_ca_wall_q_2
									# hidden_tooltip = { 
										# has_building = ca_wall_q_1
										# NOR = { 
											# is_building = ca_wall_q_2 
											# has_building = ca_wall_q_2
										# }
										# location = { TECH_FORTIFICATIONS_CONSTRUCTION = 1 }
									# }
								# }
							# }
							# AND = { 
								# custom_tooltip = { 
									# text = tooltip_can_build_ca_wall_q_3
									# hidden_tooltip = { 
										# has_building = ca_wall_q_2
										# NOR = { 
											# is_building = ca_wall_q_3 
											# has_building = ca_wall_q_3
										# }
										# location = { TECH_FORTIFICATIONS_CONSTRUCTION = 3 }
									# }
								# }
							# }
							# AND = { 
								# custom_tooltip = { 
									# text = tooltip_can_build_ca_wall_q_4
									# hidden_tooltip = { 
										# has_building = ca_wall_q_3
										# NOR = { 
											# is_building = ca_wall_q_4 
											# has_building = ca_wall_q_4 
										# }
									# }
								# }
								# location = { TECH_FORTIFICATIONS_CONSTRUCTION = 5 }
							# }
							# AND = { 
								# custom_tooltip = { 
									# text = tooltip_can_build_ca_wall_q_5
									# hidden_tooltip = { 
										# has_building = ca_wall_q_4
										# NOR = { 
											# is_building = ca_wall_q_5 
											# has_building = ca_wall_q_5
										# }
										# location = { TECH_FORTIFICATIONS_CONSTRUCTION = 7 }
									# }
								# }
							# }
						# }
}

personal_grievance_trigger = {
	OR = {
		has_opinion_modifier = { who = ROOT modifier = opinion_hate }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_imprisoned }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder }
	}
}

family_grievance_trigger = {
	OR = {
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_executed_child }

		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_spouse }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_child }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_parent }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_sibling }
	}
}

no_grievance_trigger = {
	NOR = {
		personal_grievance_trigger = yes
		family_grievance_trigger = yes
	}
}

is_inaccessible_or_incapable_trigger = {
	OR = {  
		is_inaccessible_trigger = yes
		trait = incapable
		prisoner = yes
	}
}

lower_educational_trait_trigger = {
	OR = {
		AND = {
			trait = diplomat_1
			ROOT = {
				is_diplomat = yes
				NOT = { trait = diplomat_1 }
			}
		}
		AND = {
			trait = diplomat_2 
			ROOT = {
				is_diplomat = yes
				NOR = { 
					trait = diplomat_1
					trait = diplomat_2
				}
			}
		}
		AND = {
			trait = diplomat_3
			ROOT = {
				is_diplomat = yes
				OR = { 
					trait = diplomat_4
					trait = diplomat_5
				}
			}
		}
		AND = {
			trait = diplomat_4
			ROOT = {
				trait = diplomat_5
			}
		}
		AND = {
			trait = warrior_1
			ROOT = {
				is_warrior = yes
				NOT = { trait = warrior_1 }
			}
		}
		AND = {
			trait = warrior_2 
			ROOT = {
				is_warrior = yes
				NOR = { 
					trait = warrior_1
					trait = warrior_2
				}
			}
		}
		AND = {
			trait = warrior_3
			ROOT = {
				is_warrior = yes
				OR = { 
					trait = warrior_4
					trait = warrior_5
				}
			}
		}
		AND = {
			trait = warrior_4
			ROOT = {
				trait = warrior_5
			}
		}
		AND = {
			trait = magistrate_1
			ROOT = {
				is_magistrate = yes
				NOT = { trait = magistrate_1 }
			}
		}
		AND = {
			trait = magistrate_2 
			ROOT = {
				is_magistrate = yes
				NOR = { 
					trait = magistrate_1
					trait = magistrate_2
				}
			}
		}
		AND = {
			trait = magistrate_3
			ROOT = {
				is_magistrate = yes
				OR = { 
					trait = magistrate_4
					trait = magistrate_5
				}
			}
		}
		AND = {
			trait = magistrate_4
			ROOT = {
				trait = magistrate_5
			}
		}
		AND = {
			trait = agent_1
			ROOT = {
				is_agent = yes
				NOT = { trait = agent_1 }
			}
		}
		AND = {
			trait = agent_2 
			ROOT = {
				is_agent = yes
				NOR = { 
					trait = agent_1
					trait = agent_2
				}
			}
		}
		AND = {
			trait = agent_3
			ROOT = {
				is_agent = yes
				OR = { 
					trait = agent_4
					trait = agent_5
				}
			}
		}
		AND = {
			trait = agent_4
			ROOT = {
				trait = agent_5
			}
		}
		AND = {
			trait = mage_1
			ROOT = {
				is_mage = yes
				NOT = { trait = mage_1 }
			}
		}
		AND = {
			trait = mage_2 
			ROOT = {
				is_mage = yes
				NOR = { 
					trait = mage_1
					trait = mage_2
				}
			}
		}
		AND = {
			trait = mage_3
			ROOT = {
				is_mage = yes
				OR = { 
					trait = mage_4
					trait = mage_5
				}
			}
		}
		AND = {
			trait = mage_4
			ROOT = {
				trait = mage_5
			}
		}
	}
}

has_scarred_trait_trigger = {
	OR = {  
		trait = scarred
		trait = scarred_mid
		trait = scarred_high
	}
}

this_is_warrior_culture_trigger = { #Not really about culture - Used in AI voting logic.
	NOT = { pacifist = yes }
	OR = { 
		religion_group = yokudan_pantheon
		religion_group = daedra
		religion_group = reach_faiths
		religion_group = kamal_religions
		religion_group = islander_religions
		religion = five_courts
		religion = sixth_house
		religion = dragon_cult
		religion = black_dragon
		has_religion_feature = religion_warlike
		is_tribal = yes
		is_nomadic = yes
	}
}

this_is_diplomatic_culture_trigger = { #Not really about culture - Used in AI voting logic.
	OR = {
		is_feudal = yes
		is_patrician = yes
		is_merchant_republic = yes
	} 
	OR = { 
		religion_group = human_pantheon
		religion_group = mer_pantheon
		religion_group = tangmo_religions
		religion = night_court
		has_religion_feature = religion_cosmopolitan
		#AND = { 
		#	NOT = { has_dlc = "Holy Fury"}
		#	religion = hellenic_pagan_reformed
		#}
	}
}
this_is_spiritual_culture_trigger = { #Not really about culture - Used in AI voting logic.
	OR = { 
		religion_group = hist_group
		religion_group = khajiit_pantheon
		AND = {
			religion_group = tribunal
			NOT = {
				religion = sixth_house
			}
		}
		has_religion_feature = religion_peaceful
	}
}
this_is_sea_raider_trigger = {
	OR = { 
		trait = pirate
		trait = viking
		trait = ravager
		trait = seaking
		trait = sea_queen
	}
}

can_apply_lame_nickname_trigger = {
	has_nickname = no
}

can_apply_average_nickname_trigger = {
	OR = {
		has_nickname = no
		this_has_lame_nickname_trigger = yes
	}	
}

can_apply_cool_nickname_trigger = {
	OR = {
		has_nickname = no
		this_has_lame_nickname_trigger = yes
		this_has_average_nickname_trigger = yes
	}
}

can_apply_super_cool_nickname_trigger = {
	OR = {
		has_nickname = no
		this_has_lame_nickname_trigger = yes
		this_has_average_nickname_trigger = yes
		this_has_cool_nickname_trigger = yes
	}
}

this_has_lame_nickname_trigger = {
	OR = {
	}
}
this_has_average_nickname_trigger = {
	OR = {
	}
}
this_has_cool_nickname_trigger = {
	OR = {
	}
}
this_has_super_cool_nickname_trigger = {
	OR = {
	}
}

#Sex restrictions on Great Tribal Festival activities. (REMOVED: ONLY CHECKS THAT THE CHARACTER IS AN ADULT NOW)
can_enter_festival_physical_competitions_trigger = { 
	is_adult = yes
}

has_at_least_3_traits_in_common_with_prev_trigger = {
	calc_true_if = { 
		amount = 3
		#Virtues...
		AND = {
			trait = chaste
			PREV = { trait = chaste }
		}
		AND = {
			trait = temperate
			PREV = { trait = temperate }
		}
		AND = {
			trait = charitable
			PREV = { trait = charitable }
		}
		AND = {
			trait = diligent
			PREV = { trait = diligent }
		}
		AND = {
			trait = patient
			PREV = { trait = patient }
		}
		AND = {
			trait = kind
			PREV = { trait = kind }
		}
		AND = {
			trait = humble
			PREV = { trait = humble }
		}

		#sins...
		AND = {
			trait = lustful
			PREV = { trait = lustful }
		}
		AND = {
			trait = gluttonous
			PREV = { trait = gluttonous }
		}
		AND = {
			trait = greedy
			PREV = { trait = greedy }
		}
		AND = {
			trait = slothful
			PREV = { trait = slothful }
		}
		AND = {
			trait = envious
			PREV = { trait = envious }
		}
		AND = {
			trait = wroth
			PREV = { trait = wroth }
		}
		AND = {
			trait = proud
			PREV = { trait = proud }
		}

		#Others traits!
		AND = {
			trait = ambitious
			PREV = { trait = ambitious }
		}
		AND = {
			trait = arbitrary
			PREV = { trait = arbitrary }
		}
		AND = {
			trait = brave
			PREV = { trait = brave }
		}
		AND = {
			trait = content
			PREV = { trait = content }
		}
		AND = {
			trait = craven
			PREV = { trait = craven }
		}
		AND = {
			trait = cruel
			PREV = { trait = cruel }
		}
		AND = {
			trait = cynical
			PREV = { trait = cynical }
		}
		AND = {
			trait = deceitful
			PREV = { trait = deceitful }
		}
		AND = {
			trait = erudite
			PREV = { trait = erudite }
		}
		AND = {
			trait = gregarious
			PREV = { trait = gregarious }
		}
		AND = {
			trait = honest
			PREV = { trait = honest }
		}
		AND = {
			trait = just
			PREV = { trait = just }
		}
		AND = {
			trait = paranoid
			PREV = { trait = paranoid }
		}
		AND = {
			trait = shy
			PREV = { trait = shy }
		}
		AND = {
			trait = stubborn
			PREV = { trait = stubborn }
		}
		AND = {
			trait = trusting
			PREV = { trait = trusting }
		}
		AND = {
			trait = zealous
			PREV = { trait = zealous }
		}
	}
}

has_at_least_3_traits_opposite_prev_trigger = {
	calc_true_if = { 
		amount = 3
		#Virtues...
		AND = {
			trait = chaste
			PREV = { trait = lustful }
		}
		AND = {
			trait = temperate
			PREV = { trait = gluttonous }
		}
		AND = {
			trait = charitable
			PREV = { trait = greedy }
		}
		AND = {
			trait = diligent
			PREV = { trait = slothful }
		}
		AND = {
			trait = patient
			PREV = { trait = wroth }
		}
		AND = {
			trait = kind
			PREV = {
				OR = {
					trait = envious
					trait = cruel
				}
			}
		}
		AND = {
			trait = humble
			PREV = { trait = proud }
		}

		#sins...
		AND = {
			trait = lustful
			PREV = { trait = chaste }
		}
		AND = {
			trait = gluttonous
			PREV = { trait = temperate }
		}
		AND = {
			trait = greedy
			PREV = { trait = charitable }
		}
		AND = {
			trait = slothful
			PREV = { trait = diligent }
		}
		AND = {
			OR = {
				trait = envious
				trait = cruel
			}
			PREV = { trait = kind }
		}
		AND = {
			trait = wroth
			PREV = { trait = patient }
		}
		AND = {
			trait = proud
			PREV = { trait = humble }
		}

		#Others traits!
		AND = {
			trait = ambitious
			PREV = { trait = content }
		}
		AND = {
			trait = arbitrary
			PREV = { trait = just }
		}
		AND = {
			trait = brave
			PREV = { trait = craven }
		}
		AND = {
			trait = content
			PREV = { trait = ambitious }
		}
		AND = {
			trait = craven
			PREV = { trait = brave }
		}
		AND = {
			trait = cynical
			PREV = { trait = zealous }
		}
		AND = {
			trait = deceitful
			PREV = { trait = honest }
		}
		AND = {
			trait = gregarious
			PREV = { trait = shy }
		}
		AND = {
			trait = honest
			PREV = { trait = deceitful }
		}
		AND = {
			trait = just
			PREV = { trait = arbitrary }
		}
		AND = {
			trait = paranoid
			PREV = { trait = trusting }
		}
		AND = {
			trait = shy
			PREV = { trait = gregarious }
		}
		AND = {
			trait = trusting
			PREV = { trait = paranoid }
		}
		AND = {
			trait = zealous
			PREV = { trait = cynical }
		}
		AND = {
			trait = vain
			PREV = { trait = slovenly }
		}
		AND = {
			trait = slovenly
			PREV = { trait = vain }
		}
		AND = {
			trait = patient
			PREV = { trait = reckless }
		}
		AND = {
			trait = reckless
			PREV = { trait = patient }
		}
	}
}

has_any_sympathy_trait_trigger = { 
	OR = {
		trait = sympathy_human_pantheon
		trait = sympathy_yokudan_pantheon
		trait = sympathy_mer_pantheon
		trait = sympathy_tribunal
		trait = sympathy_daedra
		trait = sympathy_khajiit_pantheon
		trait = sympathy_hist_group
		trait = sympathy_reach_faiths
		trait = sympathy_old_faith
		trait = sympathy_void_religions
		trait = sympathy_atmoran_pantheon
		trait = sympathy_oblivion_religions
		trait = sympathy_tsaesci_courts
		trait = sympathy_tangmo_religions
		trait = sympathy_potun_religions
		trait = sympathy_kamal_religions
		trait = sympathy_islander_religions
		trait = sympathy_maormer_religion
	}
}

preferred_gender_based_on_laws_trigger = {
	OR = {
		AND = {
			is_female = no
			PREV = {
				OR = {
					has_law = cognatic_succession
					has_law = agnatic_succession
				}
			}
		}
		PREV = { has_law = true_cognatic_succession }
		AND = {
			is_female = yes
			PREV = {
				OR = {
					has_law = enatic_succession
					has_law = enatic_cognatic_succession
				}
			}
		}
	}
}

has_bad_priest_trait_trigger = {
	#
}

# Referenced by the "button_rename" button in the character view 
can_rename_character_trigger = {
	is_liege_or_above = FROM
	dynasty = FROM
	age < 10
}

is_sick_or_injured_trigger = {
	OR = {
		trait = pneumonic
		trait = syphilitic
		trait = leper
		trait = maimed
		trait = infirm
		trait = incapable
		trait = has_tuberculosis
		trait = has_typhoid_fever
		trait = has_typhus
		trait = has_bubonic_plague
		trait = has_measles
		trait = has_small_pox
		trait = mangled
		trait = severely_injured
		trait = flu
		trait = dysentery
		trait = gout
		trait = food_poisoning
		trait = rabies
		trait = cancer
		trait = scurvy
		trait = cholera
		trait = dampworm
		trait = witches_pox
		trait = greenspore
		trait = rockjoint
		trait = stomach_rot
		trait = chrondiasis
	}
}

has_fair_trait_trigger = {
	OR = {
		trait = fair
		trait = groomed
	}
}

has_ugly_trait_trigger = {
	OR = {
		trait = ugly
		trait = uncouth
	}
}

has_any_leadership_trait_trigger = {
	OR = {
		trait = aggressive_leader
		trait = aggressive_leader_2
		trait = aggressive_leader_3
		trait = narrow_flank_leader
		trait = narrow_flank_leader_2
		trait = narrow_flank_leader_3
		trait = cavalry_leader
		trait = cavalry_leader_2
		trait = cavalry_leader_3
		trait = defensive_leader
		trait = defensive_leader_2
		trait = defensive_leader_3
		trait = desert_terrain_leader
		trait = experimenter
		trait = experimenter_2
		trait = experimenter_3
		trait = flanker
		trait = flanker_2
		trait = flanker_3
		trait = flat_terrain_leader
		trait = heavy_infantry_leader
		trait = heavy_infantry_leader_2
		trait = heavy_infantry_leader_3
		trait = holy_warrior
		trait = inspiring_leader
		trait = inspiring_leader_2
		trait = inspiring_leader_3
		trait = jungle_terrain_leader
		trait = light_foot_leader
		trait = light_foot_leader_2
		trait = light_foot_leader_3
		trait = mountain_terrain_leader
		trait = organizer
		trait = organizer_2
		trait = organizer_3
		trait = rough_terrain_leader
		trait = siege_leader
		trait = siege_leader_2
		trait = siege_leader_3
		trait = trickster
		trait = trickster_2
		trait = trickster_3
		trait = unyielding_leader
		trait = logistics_expert
		trait = master_of_flame
		trait = sapper
		trait = levy_coordinator
#		trait = war_elephant_leader
		trait = winter_soldier
		
		trait = veteran_leader_1
		trait = veteran_leader_2
		trait = veteran_leader_3
		trait = veteran_leader_4
		trait = veteran_leader_5
		trait = swamp_terrain_leader
		trait = extreme_terrain_leader
		trait = lead_from_rear
		trait = lead_from_fore
		trait = bloody_commander
	}
}

has_any_astrology_trait_trigger = {
}

dlc_religion_check_trigger = {
	OR = {
		# AND = {
			# religion_group = muslim
			# has_dlc = "The Sword of Islam"
		# }
		# AND = {
			# religion_group = jewish_group
			# has_dlc = "Sons of Abraham"
		# }
		# AND = {
			# religion_group = pagan_group
			# OR = {
				# has_dlc = "The Old Gods"
				# has_dlc = "Holy Fury"
			# }
		# }
		# AND = {
			# OR = {
				# religion = bon
				# religion = bon_reformed
			# }
			# has_dlc = "Jade Dragon"
		# }
		#AND = {
		#	religion_group = zoroastrian_group
		#	has_dlc = "The Old Gods"
		#}
		# AND = {
			# religion = khurmazta
			# has_dlc = "Jade Dragon"
		# }
		# AND = {
			# religion_group = indian_group
			# has_dlc = "Rajas of India"
		# }
		# AND = {
			# religion = taoist
			# has_dlc = "Jade Dragon"
		# }
	}
}

reconquista_check_trigger = {
}

not_reconquista_check_trigger = {
}

this_has_execution_reason_opinion_trigger = {
	OR = { 
		has_opinion_modifier = { who = THIS modifier = opinion_rebel_traitor }
		has_opinion_modifier = { who = THIS modifier = opinion_regicide_traitor }
		has_opinion_modifier = { who = THIS modifier = attempted_murder_of_spouse }
		has_opinion_modifier = { who = THIS modifier = attempted_murder_of_child }
		has_opinion_modifier = { who = THIS modifier = attempted_murder_of_parent }
		has_opinion_modifier = { who = THIS modifier = attempted_murder_of_sibling }
		has_opinion_modifier = { who = THIS modifier = attempted_murder_of_vassal }
		has_opinion_modifier = { who = THIS modifier = attempted_murder }
		has_opinion_modifier = { who = THIS modifier = opinion_spouse_slayer }
		has_opinion_modifier = { who = THIS modifier = opinion_murder_attempt }
		has_opinion_modifier = { who = THIS modifier = opinion_killed_close_kin }
		has_opinion_modifier = { who = THIS modifier = opinion_killed_father }
		has_opinion_modifier = { who = THIS modifier = opinion_hajj_attempt_murder }
		has_opinion_modifier = { who = THIS modifier = opinion_castrated_me }
		has_opinion_modifier = { who = THIS modifier = opinion_blinded_me }
		has_opinion_modifier = { who = THIS modifier = opinion_witch }
		has_opinion_modifier = { who = THIS modifier = opinion_takfir }
		has_opinion_modifier = { who = THIS modifier = opinion_attempted_abduction }
		has_opinion_modifier = { who = THIS modifier = opinion_unfaithful_wife }
		has_opinion_modifier = { who = THIS modifier = opinion_unfaithful_husband_crime }
		has_opinion_modifier = { who = THIS modifier = opinion_cuckolded }
		has_opinion_modifier = { who = THIS modifier = opinion_charge_dw }
		has_opinion_modifier = { who = THIS modifier = opinion_tortured_me }
		has_opinion_modifier = { who = THIS modifier = opinion_mutilated_me }
		has_opinion_modifier = { who = THIS modifier = opinion_mutilated_family }
		has_opinion_modifier = { who = THIS modifier = opinion_mutilated_close_kin }
		has_opinion_modifier = { who = THIS modifier = opinion_outlawed_society }
		has_opinion_modifier = { who = THIS modifier = opinion_accused_apostate }
	}
}

root_has_execution_reason_opinion_trigger = {
	OR = { 
		has_opinion_modifier = { who = ROOT modifier = opinion_rebel_traitor }
		has_opinion_modifier = { who = ROOT modifier = opinion_regicide_traitor }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_spouse }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_child }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_parent }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_sibling }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_vassal }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder }
		has_opinion_modifier = { who = ROOT modifier = opinion_spouse_slayer }
		has_opinion_modifier = { who = ROOT modifier = opinion_murder_attempt }
		has_opinion_modifier = { who = ROOT modifier = opinion_killed_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_killed_father }
		has_opinion_modifier = { who = ROOT modifier = opinion_hajj_attempt_murder }
		has_opinion_modifier = { who = ROOT modifier = opinion_castrated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_blinded_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_witch }
		has_opinion_modifier = { who = ROOT modifier = opinion_takfir }
		has_opinion_modifier = { who = ROOT modifier = opinion_attempted_abduction }
		has_opinion_modifier = { who = ROOT modifier = opinion_unfaithful_wife }
		has_opinion_modifier = { who = ROOT modifier = opinion_unfaithful_husband_crime }
		has_opinion_modifier = { who = ROOT modifier = opinion_cuckolded }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_dw }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_outlawed_society }
		has_opinion_modifier = { who = ROOT modifier = opinion_accused_apostate }
	}
}

root_has_imprisonment_reason_opinion_trigger = {
	OR = { 
		has_opinion_modifier = { who = ROOT modifier = opinion_dishonorable }
		has_opinion_modifier = { who = ROOT modifier = opinion_traitor }
		has_opinion_modifier = { who = ROOT modifier = opinion_rebel_traitor }
		has_opinion_modifier = { who = ROOT modifier = opinion_regicide_traitor }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_spouse }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_child }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_parent }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_sibling }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_vassal }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder }
		has_opinion_modifier = { who = ROOT modifier = opinion_spouse_slayer }
		has_opinion_modifier = { who = ROOT modifier = opinion_murder_attempt }
		has_opinion_modifier = { who = ROOT modifier = opinion_killed_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_killed_father }
		has_opinion_modifier = { who = ROOT modifier = opinion_hajj_attempt_murder }
		has_opinion_modifier = { who = ROOT modifier = opinion_fatwa_target }
		has_opinion_modifier = { who = ROOT modifier = opinion_refused_order }
		has_opinion_modifier = { who = ROOT modifier = opinion_castrated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_blinded_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_castrated_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_castrated_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_blinded_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_blinded_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_witch }
		has_opinion_modifier = { who = ROOT modifier = opinion_takfir }
		has_opinion_modifier = { who = ROOT modifier = opinion_attempted_abduction }
		has_opinion_modifier = { who = ROOT modifier = opinion_killed_lover }
		has_opinion_modifier = { who = ROOT modifier = opinion_unfaithful_wife }
		has_opinion_modifier = { who = ROOT modifier = opinion_unfaithful_husband_crime }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_heresiarch }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_infidel }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_deviant }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_illegitimate }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_cultist }
		has_opinion_modifier = { who = ROOT modifier = opinion_cuckolded }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_dw }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_traitor }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_slanderer }
		has_opinion_modifier = { who = ROOT modifier = abuse_of_office }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_thief }
		has_opinion_modifier = { who = ROOT modifier = opinion_outlawed_society }
		has_opinion_modifier = { who = ROOT modifier = opinion_accused_apostate }
	}
}

region_africa_west_central_or_east_trigger = {
}

has_rain_or_drought_modifier_trigger = {
}

any_neighbor_province_has_dry_weather_trigger = {
}
any_neighbor_province_has_heavy_rain_trigger = {
}
any_neighbor_province_has_light_rain_trigger = {
}

varangian_guard_events_default_trigger = {
	ai = yes
	age = 16
	is_incapable = no
	prisoner = no
#	culture_group = north_germanic
	has_character_flag = serving_varangian
	has_dlc = "The Old Gods"
}


ere_elective_politician_titles_trigger = { #Used in Imperial Elective to determine AI behavior.
	OR = {
		has_job_title = job_marshal
		has_job_title = job_spymaster
		has_job_title = job_treasurer
		has_job_title = job_chancellor
		has_minor_title = title_despot
		has_minor_title = title_sebastokrator
		has_minor_title = title_caesar
		has_minor_title = title_kouropalates
		has_minor_title = title_anthypatos
	} 
}

can_still_be_commander_byzantine_trigger = { 
	NOT = { 
		primary_title = { temporary = yes } 
	}
	liege = { 
		character = FROMFROM 
		has_law = succ_byzantine_elective
	}
	is_adult = yes
	
	prisoner = no
	NOT = { trait = incapable }
 	NOT = { trait = sick_incapable }
	NOT = { is_inaccessible_trigger = yes }
	NOT = { has_character_modifier = refusing_to_lead }
	NOR = { 
		war_with = FROMFROM
		any_liege = {  
			war_with = FROMFROM
		}
	}
	OR = { 
		higher_real_tier_than = BARON #Either potential commander is vassal...
		NOT = { #...Or there are no valid vassal candidates that can be commanders.
			custom_tooltip = { 
				text = tooltip_byzantine_empire_can_appoint_commanders
				liege = { 
					any_vassal = { 
						higher_real_tier_than = BARON
						NOT = { 
							primary_title = { temporary = yes } 
						}
						is_adult = yes
						
						prisoner = no
						NOT = { trait = incapable }
						NOT = { is_inaccessible_trigger = yes }
						NOT = { has_character_modifier = refusing_to_lead }
						NOR = {
							has_job_title = job_chancellor
							has_job_title = job_marshal
							has_job_title = job_treasurer
							has_job_title = job_spymaster
							has_job_title = job_spiritual
							has_minor_title = title_commander
						}
					} 
				} 
			} 
		}
	}
}

can_still_be_marshal_byzantine_trigger = {
	liege = { 
		character = FROMFROM
		has_law = succ_byzantine_elective
	}
	NOR = { 
		war_with = FROMFROM
		any_liege = {  
			war_with = FROMFROM
		}
	}
	
	is_adult = yes
	
	independent = no
	prisoner = no
	NOT = { trait = incapable }
 	NOT = { trait = sick_incapable }
	NOT = { trait = in_hiding }
	NOT = { has_character_modifier = resigned_in_anger }
	NOT = { 
		liege = { 
			has_opinion_modifier = {
				who = ROOT	
				modifier = opinion_resigned_from_council 
			} 
		} 
	}
}

is_single_player_observer_mode = {
	AND = {
		multiplayer = no
		is_local_human_observer = yes
	}
}
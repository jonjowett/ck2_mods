# Crusade using the new crusade system. See crusades.info in the religion folder for documentation
new_crusade = {
	name = CB_NAME_CRUSADE
	war_name = WAR_NAME_CRUSADE
	sprite = 9
	truce_days = 3650
	is_permanent = yes
	is_holy_war = yes
	battle_warscore_mult = 0.5
	max_defender_occupation_score = 85
	check_de_jure_tier = KING # this scans all de jure kingdoms for the counties which are held by or vassals(or below) of selected character. Only valid if is_permanent = yes
	is_crusade = yes
	allow_whitepeace = no
	
	allowed_to_target_tributaries = no
	can_ask_to_join_war = no # People join via script instead
	
	sort_priority = 3000

	can_use_gui = {
		ROOT = {
			uses_new_crusade = yes
			has_called_crusade = no
			religion_authority = 0.05
			conditional_tooltip = {
				trigger = {
					is_alternate_start = yes
					has_alternate_start_parameter = {
						key = religion_names
						value = random
					}
				}
				custom_tooltip = {
					text = ALT_GHW_STARTED
					has_global_flag = muslim_jihads_unlocked
					has_global_flag = pagan_ghws_unlocked
					has_global_flag = christian_crusades_unlocked
				}
			}
			conditional_tooltip = {
				trigger = {
					NOT = {
						has_alternate_start_parameter = {
							key = religion_names
							value = random
						}
					}
				}
				religion_group = christian
				custom_tooltip = {
					text = CTT_CHRISTIAN_CRUSADES_UNLOCKED
					has_global_flag = christian_crusades_unlocked
				}
			}
			mercenary = no
		}
	}

	can_use = {
		ROOT = {
			uses_new_crusade = yes
			can_call_crusade = yes
			hidden_tooltip = {
				NOT = { has_character_modifier = cancel_crusade_cooldown }
			}
		}
		
		FROM = {
			NOT = { religion = ROOT}
			OR = {
				NOT = { religion_group = ROOT }
				AND = {
					has_character_flag = fourth_crusade_target
					NOR = { 
						has_character_flag = fourth_crusade_recipient 
						religion = ROOT
					}
				}
				AND = {
					has_global_flag = 4th_crusade_official
					has_landed_title = e_byzantium
					NOT = { religion = ROOT }
				}
				is_heresy_of = ROOT
				is_parent_religion = ROOT
				AND = {
					religion_group = pagan_group
					NOT = { religion = ROOT }
				}
			}
		}
		
		NOT = { # Not if the Schism has been mended
			AND = {
				OR = {
					religion = catholic
					religion = fraticelli
				}
				has_global_flag = schism_mended
			}
		}
	}

	can_use_title = {
		FROM = {
			any_realm_title = {
				de_jure_liege_or_above = PREVPREV
			}
			
			independent = yes # Don't declare Crusades on revolters - chances are high the war will invalidate
			
			OR = {
				num_of_realm_counties = {
					value = 6
					title = PREV
				}
				PREV = {
					title = k_thrace	
					FROM = { 
						has_landed_title = e_byzantium 
						religion_group = christian
					}
				} 
			}
		}
	}
	
	is_valid = {
		ROOT = {
			can_call_crusade = yes
		}
		FROM = {
			NOT = { religion = ROOT}
			OR = {
				NOT = { religion = ROOT }
				is_heresy_of = ROOT
				is_parent_religion = ROOT
				AND = {
					religion_group = pagan_group
					NOT = { religion = ROOT }
				}
			}
		}
	}

	is_valid_title = {
		FROM = {
			any_realm_province = {
				de_jure_liege_or_above = PREVPREV
			}
		}
	}

	on_add = {
		hidden_tooltip = { fire_haruspicy_event_effect = yes }
		if = {
			limit = { defender = { is_offmap_governor = offmap_china } }
			attacker = {  
				sound_effect = china_angered_emperor
				detract_grace_super_huge_effect = yes 
			}
		}
	}

	on_success_title = {
		ROOT = {
			crusade_target_title = {
				save_event_target_as = new_crusade_title
			}
		}

		ROOT = {
			official_crusade_recipient = {
				save_event_target_as = new_crusade_recipient
			}
		}

		most_participating_crusader = {
			save_event_target_as = new_crusade_most_participating_member
		}

		ROOT = {
			crusade_target_char = {
				save_event_target_as = new_crusade_target_char
			}
		}

		custom_tooltip = {
			text = new_crusade_win_TT
		}

		# Religion Authority and Prestige/Piety for the winner (Pope)
		ROOT = {
			show_scope_change = no
			participation_scaled_prestige = 500
			participation_scaled_piety = 1000
			religion_authority = {
				modifier = won_crusade
				years = 20
			}
		}
		
		# Religion Authority and Prestige/Piety loss for the loser (Target of Crusade)
		FROM = {
			piety = -100
			religion_authority = {
				modifier = lost_crusade
				years = 20
			}			
		}

		hidden_tooltip = {
		
			if = { # Achievement
				limit = {
					event_target:new_crusade_target_char = {
						has_landed_title = e_byzantium
						religion_group = FROM
					}
				}
				any_attacker = {
					limit = {
						ai = no
					}
					set_character_flag = achievement_venetian_guile
				}
			}

			if = {
				limit = {
					ai = yes
					NOT = {
						crusade_beneficiary = {
							always = yes
						}
					}
				}
				character_event = { id = HFP.41007 }
			}
		
			# Should we give the seized land to the Official Crusade Recipient?
			if = {
				limit = {
					most_participating_crusader = {
						NOT = {
							has_character_flag = crusade_selfish_stance
							has_character_flag = crusade_beneficiary_stance
						}
						official_crusade_recipient = {
							is_alive = yes
							religion = ROOT
						}
					}
				}
				most_participating_crusader = {
					official_crusade_recipient = {
						set_crusader_king = this
					}
				}
			}

			# Give the seized land to the main contributor of the Crusade or his/her Beneficiary
			else_if = {
				limit = {
					most_participating_crusader = {
						holy_order = no
						mercenary = no
						NOR = {
							has_landed_title = k_papal_state
							has_landed_title = d_fraticelli
						}
						OR = {
							AND = {
								ai = yes
								crusade_beneficiary = {
									is_alive = yes
								}
							}
							ai = no
						}
					}
				}
				most_participating_crusader = {
					# Give the title to your Beneficiary
					if = {
						limit = {
		                    crusade_beneficiary = {
	                            is_alive = yes
	                            is_landed = no
								NOT = {
									any_heir_title = {
										always = yes
									}
								}
	                            mercenary = no
	                            holy_order = no
		                    }
		                    NOT = {
		                    	has_character_flag = crusade_selfish_stance
		                    }
						}
						crusade_beneficiary = {
							set_crusader_king = THIS
							set_character_flag = crusader_king_flag
						}
					}
					# Find an appropriate replacement Beneficiary if there is none selected, or the currently selected one is improper in one way or another
					else_if = {
						limit = {
							ai = yes
		                    any_dynasty_member = {
	                    		age = 16
								NOT = {
									any_heir_title = {
										always = yes
									}
								}
	                    		is_landed = no
	                    		mercenary = no
	                    		holy_order = no
	                    		religion = PREV
		                    }
							NOT = {
								has_character_flag = crusade_selfish_stance
							}
						}
						random_dynasty_member = {
							limit = {
								age = 16
								NOT = {
									any_heir_title = {
										always = yes
									}
								}
								is_landed = no
								mercenary = no
								holy_order = no
								religion = PREV
							}
							preferred_limit = {
								is_child_of = PREV
								culture = PREV
								NOT = {
									age = 45
								}
								preferred_gender_based_on_laws_trigger = yes
							}
							preferred_limit = {
								is_child_of = PREV
								NOT = {
									age = 45
								}
								preferred_gender_based_on_laws_trigger = yes
							}
							preferred_limit = {
								is_child_of = PREV
								preferred_gender_based_on_laws_trigger = yes
							}
							preferred_limit = {
								is_liege_or_above = PREV
								culture = PREV
								NOT = {
									age = 45
								}
								preferred_gender_based_on_laws_trigger = yes		
							}
							preferred_limit = {
								is_liege_or_above = PREV
								NOT = {
									age = 45
								}
								preferred_gender_based_on_laws_trigger = yes		
							}
							preferred_limit = {
								is_liege_or_above = PREV
								preferred_gender_based_on_laws_trigger = yes		
							}
							preferred_limit = {
								is_child_of = PREV
								culture = PREV
								NOT = {
									age = 45
								}
							}
							preferred_limit = {
								is_child_of = PREV
								NOT = {
									age = 45
								}
							}
							preferred_limit = {
								is_child_of = PREV
							}
							preferred_limit = {
								is_liege_or_above = PREV
								culture = PREV
								NOT = {
									age = 45
								}
							}
							preferred_limit = {
								is_liege_or_above = PREV
								NOT = {
									age = 45
								}
							}
							preferred_limit = {
								is_liege_or_above = PREV
							}
							preferred_limit = {
								culture = PREV
								NOT = {
									age = 45
								}
							}
							preferred_limit = {
								NOT = {
									age = 45
								}
							}
							preferred_limit = {
								culture = PREV
							}
							set_crusader_king = THIS
							set_character_flag = crusader_king_flag
						}
					}
					# Take the titles yourself
					else = {
						if = {
							limit = {
								any_owned_bloodline = {
									has_bloodline_flag = grand_crusader_bloodline
									bloodline_is_active_for = PREV
								}
							}
							set_crusade_pot_multiplier = 0.2
						}
						else = {
							set_crusade_pot_multiplier = 0
						}
						set_crusader_king = THIS
						set_character_flag = crusader_king_flag
					}
				}
			}

			# If not applicable, find someone else to take the title
			else = {
				# Find a random Beneficiary within certain limits
				if = {
					limit = {
						most_participating_crusader = {
							any_crusade_participant = {
								is_alive = yes
								is_landed = yes
								holy_order = no
								mercenary = no
								crusade_beneficiary = {
									is_alive = yes
									is_landed = no
									holy_order = no
									NOT = {
			                            any_heir_title = { 
			                                always = yes
			                            }
									}
									age = 12
								}
							}
						}
					}
					most_participating_crusader = {
						random_crusade_participant = {
							limit = {
								is_alive = yes
								is_landed = yes
								holy_order = no
								mercenary = no
								crusade_beneficiary = {
									is_alive = yes
									is_landed = no
									holy_order = no
									NOT = {
			                            any_heir_title = { 
			                                always = yes
			                            }
									}
									age = 12
								}
							}
							preferred_limit = {
								tier = EMPEROR
							}
							preferred_limit = {
								tier = KING
							}
							crusade_beneficiary = {
		    		        	set_crusader_king = THIS
				                set_character_flag = crusader_king_flag
							}
						}
					}
				}
				# Find any random Beneficiary, if possible
				else_if = {
					limit = {
						most_participating_crusader = {
							any_crusade_participant = {
								crusade_beneficiary = {
									is_alive = yes
									is_landed = no
									holy_order = no
									NOT = {
										any_heir_title = {
											always = yes
										}
									}
								}
							}
						}
					}
					most_participating_crusader = {
						random_crusade_participant = {
							limit = {
								crusade_beneficiary = {
									is_alive = yes
									is_landed = no
									holy_order = no
									NOT = {
										any_heir_title = {
											always = yes
										}
									}
								}
							}
							crusade_beneficiary = {
								set_crusader_king = THIS
								set_character_flag = crusader_king_flag
							}
						}
					}
				}
				# Find a logical "Beneficiary" from any playable Catholic/Fraticelli ruler, if all else fails
				else = {
					most_participating_crusader = {
						# Try to find a Catholic/Fraticelli ruler
						if = {
							limit = {
								any_playable_ruler = {
									religion = PREV
									any_dynasty_member = {
										is_alive = yes
										is_dying = no
										mercenary = no
										holy_order = no
										age = 12
										NOT = {
											any_heir_title = {
												always = yes
											}
										}
									}
								}
							}
							random_playable_ruler = {
								limit = {
									religion = PREV
									any_dynasty_member = {
										is_alive = yes
										is_dying = no
										mercenary = no
										holy_order = no
										age = 12
										NOT = {
											any_heir_title = {
												always = yes
											}
										}
									}
								}
								preferred_limit = {
									tier = EMPEROR
									culture = PREV
								}
								preferred_limit = {
									tier = EMPEROR
								}
								preferred_limit = {
									tier = KING
									culture = PREV
								}
								preferred_limit = {
									tier = KING
								}
								preferred_limit = {
									tier = DUKE
									culture = PREV
								}
								preferred_limit = {
									tier = DUKE
								}
								preferred_limit = {
									culture = PREV
								}
								random_dynasty_member = {
									limit = {
										religion = PREV
										is_alive = yes
										is_dying = no
										mercenary = no
										holy_order = no
										age = 12
										NOT = {
											any_heir_title = {
												always = yes
											}
										}
									}
									set_crusader_king = THIS
								}
							}
						}
						# If every other option fails, make the Holy Order Grandmaster the Crusader King
						else = {
							set_crusader_king = THIS
						}
					}
				}
			}

			# Find a backup beneficiary for the other Crusaders, if they don't have one already selected
			any_attacker = {
				limit = {
					NOT = {
						most_participating_crusader = {
							character = PREV
						}
					}
					ai = yes
					OR = {
	                	crusade_beneficiary = {
	                    	OR = {
	                        	is_alive = no
	                        	is_landed = yes
								NOT = {
									any_heir_title = {
										always = yes
									}
								}
	                        	mercenary = yes
	                        	holy_order = yes
	                    	}
	                	}
	                	NOT = {
	                    	crusade_beneficiary = {
	                        	always = yes
	                    	}
	                	}
	                }
				}
				save_event_target_as = crusade_attacker
				character_event = { id = HFP.41007 }
			}

			# Make sure selfish Crusaders get as little as possible (reduce the pot for Selfish Crusaders)
			any_attacker = {
				limit = {
					has_character_flag = crusade_selfish_stance
				}
				set_crusade_pot_multiplier = 0
			}

			# Distribute the Pot and Titles
			ROOT = {
				set_global_flag = distributing_crusade
				any_crusade_participant = {
					limit = {
						ai = no
						most_participating_crusader = {
							NOT = {
								character = PREV
							}
						}
					}
					character_event = { id = HFP.41060 }
				}
				distribute_crusade_pot = {
					amount = 1
				}
				any_crusade_participant = {
					crusade_beneficiary = {
						set_character_flag = beneficiary_who_received_titles
					}
				}
				# If the winner is a selfish Nomad
				if = {
					limit = {
						most_participating_crusader = {
							is_nomadic = yes
							OR = {
								has_character_flag = crusade_selfish_stance
								crusader_king = {
									character = PREV
								}
							}
						}
					}
					most_participating_crusader = {
						gain_settlements_under_title = {
							title = PREVPREV
							enemy = FROM
							type = holy_war
						}
					}
					any_playable_ruler = {
						narrative_event = { id = HFP.41160 }
					}
				}
				# If it is a Fourth Crusade
				else_if = {
					limit = {
						has_global_flag = 4th_crusade_official
						crusade_target_title = {
							title = k_thrace
						}
						FROM = {
							religion_group = ROOT
						}
						FROM = {
							NOT = {
								religion = ROOT
							}
						}
						crusade_target_char = {
							e_byzantium = {
								owner = {
									character = PREVPREV
								}
							}
						}
					}
					# Find a King for Trebizond
					e_byzantium = {
						owner = {
							if = {
								limit = {
									NOT = {
										any_playable_ruler = {
											has_landed_title = k_trebizond
										}
									}
								}
								random_vassal = {
									limit = {
										OR = {
											has_landed_title = d_trebizond
											has_landed_title = d_armeniacon
										}
									}
									preferred_limit = {
										has_landed_title = d_trebizond
									}
									grant_title_no_opinion = k_trebizond
								}
							}

						}
					}
					# Set vassals for Trebizond
					k_trebizond = {
						owner = {
							e_byzantium = {
								owner = {
									any_vassal = {
										limit = {
											de_jure_liege = k_trebizond
										}
										set_defacto_liege = PREVPREVPREV
									}
								}
							}
						}
					}
					# Find a Catholic/Fraticelli lord for Cyprus
					if = {
						limit = {
							c_famagusta = {
								owner = {
									religion = FROM
									culture = FROM
									ai = yes
								}
							}
							c_limisol = {
								owner = {
									religion = FROM
									culture = FROM
									ai = yes
								}
							}
							k_cyprus = {
								has_holder = no
							}
						}
						any_crusade_participant = {
							limit = {
								ai = yes
								NOT = {
									most_participating_crusader = {
										character = PREV
									}
								}
							}
							crusade_beneficiary = {
								grant_title_no_opinion = c_famagusta
								grant_title_no_opinion = c_limisol
								grant_title_no_opinion = d_cyprus
								grant_title_no_opinion = k_cyprus
								d_cyprus = {
									de_jure_liege = k_cyprus
								}
								set_defacto_liege = THIS
								character_event = { id = HFP.41090 days = 1 }
								if = {
									limit = {
										NOR = {
											trait = crusader
											trait = crusader_king
											trait = crusader_queen
										}
									}
									add_trait = crusader
								}
							}
							character_event = { id = HFP.41007 }
						}
					}
					distribute_crusade_target_title = yes
					#The Crusader King becomes an Emperor and gets a bloodline
					crusader_king = {
						grant_title_no_opinion = e_latin_empire
					}
					# Find random vassal and make a king out of them
					e_byzantium = {
						owner = {
							random_vassal = {
								limit = {
									tier = DUKE
									ai = yes
								}
								preferred_limit = {
									de_jure_liege = k_byzantium
								}
								preferred_limit = {
									de_jure_liege = k_anatolia
								}
								preferred_limit = {
									de_jure_liege = k_sicily
								}
								primary_title = {
									create_title = {
										tier = KING
										landless = no
										temporary = no
										name = "fourth_crusade_greek_kingdom_name"
										holder = PREV
										culture = PREV
										custom_created = yes
										base_title = THIS
										copy_title_laws = yes
									}
								}
							}
						}
					}
					# All Byzantine vassals go independent except those neighboring the old Emperor, and he/she gets an inferior Empire title while the Byzantine title is broken
					e_byzantium = {
						owner = {
							any_vassal = {
								limit = {
									higher_tier_than = BARON
								}
								set_defacto_liege = this
							}
							if = {
								limit = {
									primary_title = {
										title = e_byzantium
									}
									has_landed_title = c_nikaea
								}
								grant_title = e_nicaea
								e_nicaea = {
									copy_title_laws = e_byzantium
									copy_title_history = e_byzantium
									make_primary_title = yes
								}
								any_demesne_title = {
									limit = {
										tier = EMPEROR
										NOT = {
											title = e_nicaea
										}
									}
									destroy_landed_title = THIS
								}
								any_neighbor_independent_ruler = {
									limit = {
										ai = yes
										culture = PREV
										religion = PREV
										lower_tier_than = KING
									}
									set_defacto_liege = PREV
								}
							}
							else_if = {
								limit = {
									primary_title = {
										title = e_byzantium
									}
								}
								capital_scope = {
									create_title = {
										tier = EMPEROR
										landless = no
										temporary = no
										name = "fourth_crusade_greek_empire_name"
										holder = PREV
										culture = PREV
										custom_created = yes
										base_title = THIS
									}
								}
								any_demesne_title = {
									limit = {
										tier = EMPEROR
										is_titular = no
									}
									destroy_landed_title = THIS
								}
							}
							any_neighbor_independent_ruler = {
								limit = {
									ai = yes
									culture = PREV
									religion = PREV
									lower_tier_than = KING
								}
								set_defacto_liege = PREV
							}
						}
					}
					# Crete is taken by a Merchant Lord
					if = {
						limit = {
							c_kaneia = {
								owner = {
									ai = yes
								}
							} 
							c_chandax = {
								owner = {
									ai = yes
								}
							}
							any_crusade_participant = {
								is_patrician = yes
								higher_tier_than = COUNT
							}
						}
						random_crusade_participant = {
							limit = {
								is_patrician = yes
								higher_tier_than = COUNT
							}
							preferred_limit = {
								has_landed_title = k_venice
							}
							preferred_limit = {
								has_landed_title = d_venice
							}
							preferred_limit = {
								tier = EMPEROR
							}
							preferred_limit = {
								tier = KING
							}
							grant_title_no_opinion = d_krete 
							grant_title_no_opinion = c_kaneia
							grant_title_no_opinion = c_chandax
						}
					}

					if = {
						limit = {
							official_crusade_recipient = {
								has_character_flag = fourth_crusade_recipient
							}
						}
						official_crusade_recipient = {
							save_event_target_as = byzantine_refugee
						}
					}
					# Narrative event explaining that Byzantium has been taken out
					any_character = {
						narrative_event = { id = HF.49008 }
					}
					event_target:byzantine_refugee = {
						death = {
							death_reason = death_battle
							killer = FROM
						}
					}
					# Making sure the Byzantine Empire is destroyed
					e_byzantium = {
						unsafe_destroy_landed_title = THIS
					}
				}
				# Otherwise
				else = {
					FROM = {
						any_realm_character = {
							limit = {
								religion = ROOT
								ai = no
								higher_tier_than = BARON
							}
							set_defacto_liege = THIS
						}
					}
					distribute_crusade_target_title = yes
					crusader_king = {
						save_event_target_as = crusade_king_recipient
					}
					any_playable_ruler = {
						narrative_event = { id = HFP.41160 }
					}
				}
				crusader_king = {
					if = {
						limit = {
							has_character_flag = beneficiary_who_received_titles
							NOT = { has_dynasty_modifier = ruling_in_crusader_kingdom }
						}
						add_dynasty_modifier = ruling_in_crusader_kingdom
					}
					any_realm_character = {
						limit = {
							has_character_flag = beneficiary_who_received_titles 
							NOT = { has_dynasty_modifier = ruling_in_crusader_kingdom }
						}
						add_dynasty_modifier = ruling_in_crusader_kingdom
					}
				}
				clr_global_flag = distributing_crusade
			}

			# If the CK has too much gold
			crusader_king = {
				if = {
					limit = {
						wealth = 2000 
						ai = yes
						any_vassal = {
							always = yes
						}
					}
					set_variable = { which = count value = 20 }
					while = {
						limit = {
							AND = {
								wealth = 2000
								check_variable = { which = count value = 1 }
							}
						}
						random_vassal = {
							limit = {
								NOT = {
									wealth = 1000
								}
							}
							wealth = 350
							crusader_king = {
								wealth = -350
							}
						}
						subtract_variable = { which = count value = 1 }
					}
				}
			}
			
			# Achievement
			any_attacker = {
				limit = {
					ai = no
					NOT = { has_character_flag = achievement_crusader }
				}
				set_character_flag = achievement_crusader
			}

			# Nickname for the most participating Crusader
			most_participating_crusader = {
				if = {
					limit = {
						can_apply_average_nickname_trigger = yes
					}
					random_list = {
						10 = { give_nickname = nick_the_crusader }
						10 = { give_nickname = nick_the_glorious }
						10 = { give_nickname = nick_the_lionheart }
						10 = { give_nickname = nick_the_great }
						10 = { give_nickname = nick_the_hammer }
						40 = { give_nickname = nick_the_sword_of_god }
					}
				}
			}

			# Nickname and effects for the new Crusader King, if it is a Beneficiary or the Official Crusade Recipient (not for Selfish Crusaders)
			crusader_king = {
				hidden_tooltip = {
					if = {
						limit = {
							OR = {
								most_participating_crusader = {
									NOT = {
										character = PREV
									}
								}
								ROOT = {
									official_crusade_recipient = {
										character = PREV
									}
								}
							}
						}
						opinion = {
							who = most_participating_crusader
							modifier = opinion_granted_crusader_kingdom
							years = 15
						}
						crusader_king = {
							setting_up_the_crusader_kingdom_effect = yes
							create_crusader_king_crown_effect = yes
						}
					}
				}
			}

			crusader_king = {
				save_event_target_as = new_crusader_king
			}

			# If the player is the most participating Crusader, and gave away the Kingdom to a Beneficiary, trigger event to let them start playing as Beneficiary
			if = {
				limit = {
					most_participating_crusader = {
						ai = no
						NOT = {
							character = event_target:new_crusader_king
						}
						event_target:new_crusader_king = {
							dynasty = PREV
						}
					}
				}
				most_participating_crusader = {
					narrative_event = { id = HFP.41054 days = 3 }
				}
			}

			# Check most participating Crusader if they are potential Crusader material
			most_participating_crusader = {
				if = {
					limit = {
						NOR = {
							has_character_flag = grandCrusader
							trait = crusader_king
						}
					}
					set_character_flag = grandCrusader
				}
				else_if = {
					limit = {
						OR = {
							has_character_flag = grandCrusader
							trait = crusader_king
						}
					}
					narrative_event = { id = HF.49020 }
				}
			}

			# Release the CK if they are in jail
			crusader_king = {
				imprison = no
			}

			# Special bloodline for the recipient of the first Crusade
			if = {
				limit = {
					NOT = {
						has_global_flag = first_crusade_complete
					}
					most_participating_crusader = {
						NOT = {
							crusader_king = {
								character = PREV
							}
						}
					}
				}
				if = {
					limit = {
						has_dlc = "Holy Fury"
					}
					if = {
						limit = {
							crusader_king = {
								is_female = yes
							}
						}
						crusader_king = {
							create_bloodline = {
								type = crusade_lord
								religion = THIS
								inheritance = matrilineal
							}
							set_bloodline_founder_religion_flag_effect = yes
						}
					}
					else = {
						crusader_king = {
							create_bloodline = {
								type = crusade_lord
								religion = THIS
								inheritance = patrilineal
							}
							set_bloodline_founder_religion_flag_effect = yes
						}
					}
				}
			}

			# Checks if First Crusade
			if = {
				limit = {
					NOT = {
						has_global_flag = first_crusade_complete
					}
				}
				set_global_flag = first_crusade_complete
			}

			# Adds a negative opinion modifier for selfish Crusaders
			any_crusade_participant = {
				limit = {
					OR = {
						has_character_flag = crusade_selfish_stance
						AND = {
							NOR = {
								has_character_flag = crusade_papal_stance
                				has_character_flag = crusade_beneficiary_stance
							}
							most_participating_crusader = {
								crusader_king = {
									character = PREV
									character = PREVPREV
								}
							}
						}
					}
				}
				if = {
					limit = {
						NOT = {
							ROOT = {
								has_opinion_modifier = {
									who = PREVPREV
									modifier = opinion_selfish_crusader
								}
							}
						}
					}
					ROOT = {
						opinion = {
							who = PREVPREV
							modifier = opinion_selfish_crusader
							years = 20
						}
					}
				}
			}

			# Clean up stances
			any_attacker = {
				clr_character_flag = crusade_selfish_stance
				clr_character_flag = crusade_beneficiary_stance
				clr_character_flag = crusade_papal_stance
			}

			ROOT = {
				character_event = { id = HFP.41199 }
			}
		}

		hidden_tooltip = {
			check_if_reconquista_finished_effect = yes
			FROM = {
				landless_pope_effect = yes
			}
		}
	}

	on_fail = {
		ROOT = {
			character_event = { id = HFP.41199}
		}

		ROOT = {
			show_scope_change = no
			piety = -100
		}
		
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { 
				participation_scaled_piety = 200
				participation_scaled_prestige = 100
				if = {
					limit = {
						uses_decadence = yes
					}
					participation_scaled_decadence = -50
				}
			}
		}
		
		FROM = {
			participation_scaled_piety = 200
			participation_scaled_prestige = 100
			if = {
				limit = {
					uses_decadence = yes
				}
				participation_scaled_decadence = -50
			}
			if = {
				limit = { 
					has_dlc = "Legacy of Rome"
					OR = { 
						has_landed_title = e_byzantium
						has_landed_title = e_roman_empire
					}
						OR = { 
							religion_group = christian
							religion = hellenic_pagan
							religion = hellenic_pagan_reformed
						}
				}
				hidden_tooltip = { character_event = { id = LoR.30 days = 12 } }
			}
			
			hidden_tooltip = {
				if = {
					limit = {
						OR = {
							this_has_lame_nickname_trigger = yes
							has_nickname = no
						}
					}
					random_list = {
						10 = { give_nickname = nick_the_holy }
						10 = { give_nickname = nick_the_glorious }
						10 = { give_nickname = nick_the_lionheart }
						10 = { give_nickname = nick_the_great }
						10 = { give_nickname = nick_the_hammer }
						20 = {
							modifier = {
								factor = 0
								religion_group = christian
							}
							give_nickname = nick_the_sword_of_god
						}
					}
				}
			}
		}
	}

	on_reverse_demand = {
		ROOT = {
			character_event = { id = HFP.41199 }
		}

		ROOT = {
			show_scope_change = no
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
			piety = -200
			religion_authority = {
				modifier = lost_crusade
				years = 20
			}
		}
		FROM = {
			piety = 100
			religion_authority = {
				modifier = won_crusade
				years = 20
			}
			participation_scaled_piety = 300
			participation_scaled_prestige = 150
			if = {
				limit = {
					uses_decadence = yes
				}
				participation_scaled_decadence = -100
			}
			if = {
				limit = { 
					has_dlc = "Legacy of Rome"
					OR = { 
						has_landed_title = e_byzantium
						has_landed_title = e_roman_empire
					}
						OR = { 
							religion_group = christian
							religion = hellenic_pagan
							religion = hellenic_pagan_reformed
						}
				}
				hidden_tooltip = { character_event = { id = LoR.30 days = 12 } }
			}
			hidden_tooltip = {
				if = {
					limit = {
						OR = {
							this_has_lame_nickname_trigger = yes
							has_nickname = no
						}
					}
					random_list = {
						10 = { give_nickname = nick_the_holy }
						10 = { give_nickname = nick_the_glorious }
						10 = { give_nickname = nick_the_lionheart }
						10 = { give_nickname = nick_the_great }
						10 = { give_nickname = nick_the_hammer }
						20 = {
							modifier = {
								factor = 0
								religion_group = christian
							}
							give_nickname = nick_the_sword_of_god
						}
					}
				}
			}
		}
		if = {
			limit = {
				ROOT = { religion = christian }
			}
			most_participating_defender = {
				character_event = { id = IB.170 }
				
			}
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { 
				participation_scaled_piety = 300
				participation_scaled_prestige = 150
				if = {
					limit = {
						uses_decadence = yes
					}
					participation_scaled_decadence = -100
				}
			}
		}
		any_attacker = {
			limit = {
				character = ROOT
				uses_decadence = yes
				NOT = {
					any_liege = {
						dynasty = PREV
					}
				}
			}
			participation_scaled_decadence = 35
		}
		any_attacker = {
			limit = {
				NOT = { character = ROOT }
				uses_decadence = yes
				NOT = {
					any_liege = {
						dynasty = PREV
					}
				}
			}
			hidden_tooltip = { 
				participation_scaled_decadence = 35
			}
		}

		# Checks if First Crusade
		if = {
			limit = {
				NOT = {
					has_global_flag = first_crusade_complete
				}
			}
			set_global_flag = first_crusade_complete
		}
		any_defender = {
			limit = {
				ai = no
				religion_group = pagan_group
			}
			set_character_flag = achievement_pagan_fury
		}

		# Chance to start a Shepherd's Crusade
		random = {
			chance = 15
			if = {
				limit = {
					has_game_rule = {
						name = shepherds_crusade
						value = on
					}
					ROOT = {
						religion = catholic
					}
				}
				set_global_flag = catholic_shepherds_crusade
			}
			else_if = {
				limit = {
					has_game_rule = {
						name = shepherds_crusade
						value = on
					}
					ROOT = {
						religion = fraticelli
					}
				}
				set_global_flag = fraticelli_shepherds_crusade
			}
			ROOT = {
				character_event = { id = HFP.42300 days = 3}
			}
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}
}


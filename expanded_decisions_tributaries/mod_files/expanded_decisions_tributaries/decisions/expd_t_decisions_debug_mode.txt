targetted_decisions = {
	
	expd_t_enable_debug_mode = {
		only_playable = yes
		filter = self
		ai = no
		potential = {
			NOT = { has_global_flag = expd_t_debug_mode }
			OR = {
				multiplayer = no
				is_multiplayer_host_character = yes
			}
		}
		allow = {
			always = yes
		}
		effect = {
			hidden_tooltip = { set_global_flag = expd_t_debug_mode }
		}
	}
	
	expd_t_disable_debug_mode = {
		only_playable = yes
		filter = self
		ai = no
		potential = {
			expd_t_this_character_can_use_debug_mode = yes
		}
		allow = {
			always = yes
		}
		effect = {
			hidden_tooltip = { clr_global_flag = expd_t_debug_mode }
		}
	}
	
	expd_t_debug_list_all_protectors = {
		only_playable = yes
		filter = self
		third_party_filter = all
		ai = no
		potential = {
			expd_t_this_character_can_use_debug_mode = yes
		}
		allow = {
			always = yes
		}
		third_party_potential = {
			FROMFROM = {
				any_tributary = {
					is_tributary = {
						type = expd_t_protectorate
					}
				}
			}
		}
		third_party_allow = {
			always = no
		}
		effect = {
			# Nothing
		}
	}
	
	expd_t_debug_list_all_protectorates = {
		only_playable = yes
		filter = self
		third_party_filter = all
		ai = no
		potential = {
			expd_t_this_character_can_use_debug_mode = yes
		}
		allow = {
			always = yes
		}
		third_party_potential = {
			FROMFROM = { is_tributary = { type = expd_t_protectorate } }
		}
		third_party_allow = {
			always = no
		}
		effect = {
			# Nothing
		}
	}
	
	expd_t_debug_destroy_all_ai_protectorates = {
		only_playable = yes
		filter = self
		ai = no
		potential = {
			expd_t_this_character_can_use_debug_mode = yes
		}
		allow = {
			always = yes
		}
		effect = {
			if = {
				limit = { multiplayer = yes }
				custom_tooltip = {
					text = expd_t_debug_mode_notification_sent_tt
					save_event_target_as = expd_t_debug_mode_decision_taker
					any_player = { character_event = { id = EDTDebugModeNotification.1000 } }
					clear_event_target = expd_t_debug_mode_decision_taker
				}
			}
			any_character = {
				limit = {
					is_tributary = { type = expd_t_protectorate }
					suzerain = { ai = yes }
				}
				suzerain = { remove_tributary = PREV }
			}
		}
		
	}
	
	expd_t_debug_cancel_all_of_this_suzerains_protectorates = {
		only_playable = yes
		filter = independent_rulers_including_me
		ai = no
		from_potential = {
			expd_t_this_character_can_use_debug_mode = yes
		}
		potential = {
			any_tributary = { is_tributary = { type = expd_t_protectorate } }
		}
		allow = {
			always = yes
		}
		effect = {
			if = {
				limit = { multiplayer = yes }
				custom_tooltip = {
					text = expd_t_debug_mode_notification_sent_tt
					FROM = { save_event_target_as = expd_t_debug_mode_decision_taker }
					ROOT = { save_event_target_as = expd_t_debug_mode_character_affected }
					FROM = { any_player = { character_event = { id = EDTDebugModeNotification.1100 } } }
					clear_event_target = expd_t_debug_mode_decision_taker
					clear_event_target = expd_t_debug_mode_character_affected
				}
			}
			any_tributary = {
				limit = { is_tributary = { type = expd_t_protectorate } }
				suzerain = { remove_tributary = PREV }
			}
		}
	}
	
	expd_t_debug_cancel_this_protectorate = {
		only_playable = yes
		filter = independent_rulers_including_me
		ai = no
		from_potential = {
			expd_t_this_character_can_use_debug_mode = yes
		}
		potential = {
			is_tributary = { type = expd_t_protectorate }
		}
		allow = {
			always = yes
		}
		effect = {
			if = {
				limit = { multiplayer = yes }
				custom_tooltip = {
					text = expd_t_debug_mode_notification_sent_tt
					FROM     = { save_event_target_as = expd_t_debug_mode_decision_taker }
					ROOT     = { save_event_target_as = expd_t_debug_mode_character_affected }
					suzerain = { save_event_target_as = expd_t_debug_mode_character_affected_other }
					FROM = { any_player = { character_event = { id = EDTDebugModeNotification.1200 } } }
					clear_event_target = expd_t_debug_mode_decision_taker
					clear_event_target = expd_t_debug_mode_character_affected
					clear_event_target = expd_t_debug_mode_character_affected_other
				}
			}
			suzerain = { remove_tributary = PREV }
		}
	}
	
}